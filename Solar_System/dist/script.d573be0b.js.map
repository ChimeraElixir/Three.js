{"version":3,"sources":["../node_modules/three/build/three.core.js","../node_modules/three/build/three.module.js","../node_modules/three/examples/jsm/controls/OrbitControls.js","js/script.js","../../../../../../../opt/homebrew/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_readOnlyError","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_toPrimitive","toPrimitive","String","Number","REVISION","exports","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AgXToneMapping","NeutralToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","UnsignedInt5999Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","BasicDepthPacking","RGBADepthPacking","RGBDepthPacking","RGDepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","LinearTransfer","SRGBTransfer","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","listener","_listeners","undefined","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","lerp","damp","lambda","dt","exp","pingpong","arguments","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","b","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","probeAsync","gl","sync","interval","reject","probe","clientWaitSync","SYNC_FLUSH_COMMANDS_BIT","WAIT_FAILED","TIMEOUT_EXPIRED","setTimeout","toNormalizedProjectionMatrix","projectionMatrix","toReversedProjectionMatrix","isPerspectiveMatrix","LINEAR_REC709_TO_XYZ","XYZ_TO_LINEAR_REC709","createColorManagement","ColorManagement","enabled","workingColorSpace","spaces","convert","color","sourceColorSpace","targetColorSpace","transfer","SRGBToLinear","primaries","toXYZ","fromXYZ","LinearToSRGB","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","colorSpace","getTransfer","getLuminanceCoefficients","luminanceCoefficients","colorSpaces","assign","_getMatrix","targetMatrix","_getDrawingBufferColorSpace","outputColorSpaceConfig","drawingBufferColorSpace","_getUnpackColorSpace","workingColorSpaceConfig","unpackColorSpace","REC709_PRIMARIES","REC709_LUMINANCE_COEFFICIENTS","D65","_defineProperty","whitePoint","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","dataReady","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","_EventDispatcher","_this","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","_callSuper","isTexture","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","renderTarget","isRenderTargetTexture","pmremVersion","_inherits","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","generator","dispose","transformUv","uv","Vector4","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","setFromMatrixPosition","getZ","getW","_context3","RenderTarget","_EventDispatcher2","_this2","options","isRenderTarget","depth","scissor","scissorTest","viewport","depthBuffer","stencilBuffer","resolveDepthBuffer","resolveStencilBuffer","depthTexture","samples","count","texture","_depthTexture","current","setSize","il","WebGLRenderTarget","_RenderTarget","_this3","isWebGLRenderTarget","DataArrayTexture","_Texture","_this4","isDataArrayTexture","wrapR","layerUpdates","Set","addLayerUpdate","layerIndex","clearLayerUpdates","clear","WebGLArrayRenderTarget","_WebGLRenderTarget","_this5","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_this6","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_this7","isWebGL3DRenderTarget","Quaternion","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","theta1","theta2","x0","r1","r2","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","isSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","zInv","_matrix$2","_quaternion$3","Euler","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","_childaddedEvent","child","_childremovedEvent","Object3D","_EventDispatcher3","_this8","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","error","removeFromParent","remove","apply","_toConsumableArray","attach","getObjectById","id","getObjectByProperty","getObjectByName","getObjectsByProperty","result","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxInstanceCount","_maxInstanceCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","_colorsTexture","colorsTexture","boundingSphere","serialize","library","element","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$2","_vab","_vac","_vbc","_vap","_vbp","_vcp","_v40","_v41","_v42","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","getInterpolatedAttribute","attr","i3","barycoord","_colorKeywords","_hslA","_hslB","hue2rgb","Color","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","concat","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","_materialId","Material","_EventDispatcher4","_this9","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","dispersion","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapRotation","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","onBuild","MeshBasicMaterial","_Material","_this10","isMeshBasicMaterial","_superPropGet","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","updateRanges","gpuType","onUploadCallback","setUsage","addUpdateRange","start","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","Uint8BufferAttribute","_BufferAttribute2","Uint8ClampedBufferAttribute","_BufferAttribute3","Int16BufferAttribute","_BufferAttribute4","Uint16BufferAttribute","_BufferAttribute5","Int32BufferAttribute","_BufferAttribute6","Uint32BufferAttribute","_BufferAttribute7","Float16BufferAttribute","_BufferAttribute8","_this11","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_id$1","_m1","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","_EventDispatcher5","_this12","isBufferGeometry","indirect","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setIndirect","getIndirect","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","normalAttribute","uvAttribute","tangentAttribute","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","normals","toNonIndexed","convertBufferAttribute","indices","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_this13","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","uv1","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection$1","BoxGeometry","_BufferGeometry","_this14","widthSegments","heightSegments","depthSegments","scope","vertices","uvs","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","currentRenderTarget","getRenderTarget","outputColorSpace","isXRRenderTarget","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_this15","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","clipCullDistance","multiDraw","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_this16","_v3$1","_minTarget","_maxTarget","PerspectiveCamera","_Camera","_this17","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","getViewBounds","minTarget","maxTarget","getViewSize","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","_this18","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","err","_iterator2","_step2","scene","_this$children","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","needsPMREMUpdate","CubeTexture","_Texture3","_this19","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget3","_this20","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","FogExp2","density","isFogExp2","Fog","isFog","Scene","_Object3D4","_this21","backgroundBlurriness","backgroundIntensity","backgroundRotation","environmentIntensity","environmentRotation","overrideMaterial","__THREE_DEVTOOLS__","CustomEvent","detail","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$7","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","SpriteMaterial","_Material3","_this22","isSpriteMaterial","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D5","_this23","isSprite","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D6","_this24","_currentLevel","levels","isLOD","autoUpdate","level","addLevel","hysteresis","removeLevel","removedElements","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_vector3","_matrix4","_vertex","_sphere$5","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_this25","bindMatrixInverse","applyBoneTransform","bind","calculateInverses","pose","normalizeSkinWeights","skinWeight","skinIndex","weight","boneIndex","bones","boneInverses","Bone","_Object3D7","_this26","isBone","DataTexture","_Texture4","_this27","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","boneTexture","init","inverse","bone","computeBoneTexture","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute10","_this28","meshPerAttribute","isInstancedBufferAttribute","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$4","InstancedMesh","_Mesh2","_this29","morphTexture","setMatrixAt","getMatrixAt","getColorAt","getMorphAt","objectInfluences","dataIndex","raycastTimes","instanceId","setColorAt","fill","setMorphAt","morphInfluencesSum","morphBaseInfluence","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$3","_vector$6","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","ascIdSort","sortOpaque","sortTransparent","MultiDrawRenderList","pool","list","item","_matrix$1","_whiteColor","_frustum","_box$1","_sphere$2","_vector$5","_forward","_temp","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","copyArrayContents","BatchedMesh","_Mesh3","_this30","customSort","_instanceInfo","_geometryInfo","_availableInstanceIds","_availableGeometryIds","_nextIndexStart","_nextVertexStart","_visibilityChanged","_multiDrawCounts","_multiDrawStarts","_multiDrawCount","_multiDrawInstances","_indirectTexture","_initMatricesTexture","_initIndirectTexture","matricesArray","indirectArray","indirectTexture","_initColorsTexture","colorsArray","_initializeGeometry","reference","attributeName","srcAttribute","dstArray","dstAttribute","indexArray","_validateGeometry","batchGeometry","Boolean","validateInstanceId","instanceInfo","validateGeometryId","geometryId","geometryInfoList","setCustomSort","func","geometryIndex","getBoundingBoxAt","getBoundingSphereAt","addInstance","atCapacity","drawId","sort","shift","addGeometry","reservedVertexCount","reservedIndexCount","geometryInfo","vertexStart","indexStart","indexCount","hasIndex","setGeometryAt","dstIndex","srcIndex","deleteGeometry","deleteInstance","optimize","nextVertexStart","nextIndexStart","elementDelta","copyWithin","iv","setVisibleAt","getVisibleAt","setGeometryIdAt","getGeometryIdAt","getGeometryRangeAt","setInstanceCount","availableInstanceIds","multiDrawCounts","multiDrawStarts","setGeometrySize","validRanges","filter","info","requiredVertexLength","requiredIndexLength","oldGeometry","batchId","_objectSpread","bytesPerElement","BYTES_PER_ELEMENT","multiDrawCount","culled","shadowCamera","depthMaterial","LineBasicMaterial","_Material4","_this31","isLineBasicMaterial","linecap","linejoin","_vStart","_vEnd","_inverseMatrix$1","_ray$1","_sphere$1","_intersectPointOnRay","_intersectPointOnSegment","Line","_Object3D8","_this32","computeLineDistances","lineDistances","threshold","params","localThreshold","localThresholdSq","isLineSegments","checkIntersection","isLineLoop","thresholdSq","distSq","_start","_end","LineSegments","_Line","_this33","LineLoop","_Line2","_this34","PointsMaterial","_Material5","_this35","isPointsMaterial","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D9","_this36","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","Group","_Object3D10","_this37","isGroup","VideoTexture","_Texture5","video","_this38","isVideoTexture","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture6","_this39","isFramebufferTexture","CompressedTexture","_Texture7","_this40","isCompressedTexture","CompressedArrayTexture","_CompressedTexture","_this41","isCompressedArrayTexture","CompressedCubeTexture","_CompressedTexture2","_this42","isCompressedCubeTexture","CanvasTexture","_Texture8","_this43","isCanvasTexture","DepthTexture","_Texture9","_this44","isDepthTexture","compareFunction","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","last","sum","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","tangents","binormals","vec","mat","MAX_VALUE","EllipseCurve","_Curve","_this45","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","aRadius","_this46","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_this47","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","k","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_this48","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_this49","isCubicBezierCurve3","LineCurve","_Curve5","_this50","isLineCurve","LineCurve3","_Curve6","_this51","isLineCurve3","QuadraticBezierCurve","_Curve7","_this52","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_this53","isQuadraticBezierCurve3","SplineCurve","_Curve9","_this54","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_this55","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","resolution","pts","Path","_CurvePath","_this56","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry2","_this57","phiStart","phiLength","initNormals","inverseSegments","vertex","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_this58","capSegments","radialSegments","path","CircleGeometry","_BufferGeometry3","_this59","thetaStart","thetaLength","segment","CylinderGeometry","_BufferGeometry4","_this60","radiusTop","radiusBottom","openEnded","halfHeight","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_this61","PolyhedronGeometry","_BufferGeometry5","_this62","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_this63","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry6","_this64","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","hash","reverseHash","index0","_edgeData$key","Shape","_Path","_this65","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","triangles","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry7","_this66","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","layer","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_this67","OctahedronGeometry","_PolyhedronGeometry3","_this68","PlaneGeometry","_BufferGeometry8","_this69","width_half","height_half","segment_width","segment_height","RingGeometry","_BufferGeometry9","_this70","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_this71","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_this72","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_this73","TorusGeometry","_BufferGeometry12","_this74","tube","tubularSegments","TorusKnotGeometry","_BufferGeometry13","_this75","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_this76","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_this77","edges","ol","isUniqueEdge","hash1","hash2","has","Geometries","ShadowMaterial","_Material6","_this78","isShadowMaterial","RawShaderMaterial","_ShaderMaterial","_this79","isRawShaderMaterial","MeshStandardMaterial","_Material7","_this80","isMeshStandardMaterial","MeshPhysicalMaterial","_MeshStandardMaterial","_this81","isMeshPhysicalMaterial","ior","sheenColorMap","sheenRoughnessMap","_anisotropy","_clearcoat","_dispersion","_iridescence","_sheen","_transmission","MeshPhongMaterial","_Material8","_this82","isMeshPhongMaterial","MeshToonMaterial","_Material9","_this83","isMeshToonMaterial","MeshNormalMaterial","_Material10","_this84","isMeshNormalMaterial","MeshLambertMaterial","_Material11","_this85","isMeshLambertMaterial","MeshDepthMaterial","_Material12","_this86","isMeshDepthMaterial","depthPacking","MeshDistanceMaterial","_Material13","_this87","isMeshDistanceMaterial","MeshMatcapMaterial","_Material14","_this88","isMeshMatcapMaterial","LineDashedMaterial","_LineBasicMaterial","_this89","isLineDashedMaterial","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","time","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","frame","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","lastIndex","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_this90","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","trim","startTime","endTime","nKeys","to","validate","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","ColorKeyframeTrack","_KeyframeTrack2","NumberKeyframeTrack","_KeyframeTrack3","QuaternionLinearInterpolant","_Interpolant4","QuaternionKeyframeTrack","_KeyframeTrack4","StringKeyframeTrack","_KeyframeTrack5","VectorKeyframeTrack","_KeyframeTrack6","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","morphTargets","animationToMorphTargets","pattern","morphTarget","parts","match","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","transform","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","response","_this91","_wrapNativeSuper","FileLoader","_Loader","_this92","cached","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","status","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","controller","readData","read","_ref","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","CompressedTextureLoader","_Loader3","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","urls","DataTextureLoader","_Loader6","texData","TextureLoader","_Loader7","Light","_Object3D11","_this93","intensity","groundColor","decay","penumbra","shadow","HemisphereLight","_Light","skyColor","_this94","isHemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","bias","normalBias","blurSamples","mapSize","mapPass","_frameExtents","_viewportCount","_viewports","getViewportCount","getFrustum","updateMatrices","light","shadowMatrix","getViewport","viewportIndex","getFrameExtents","SpotLightShadow","_LightShadow","_this95","isSpotLightShadow","SpotLight","_Light2","_this96","isSpotLight","power","_projScreenMatrix","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_this97","isPointLightShadow","_cubeDirections","_cubeUps","PointLight","_Light3","_this98","isPointLight","OrthographicCamera","_Camera2","_this99","isOrthographicCamera","scaleW","scaleH","DirectionalLightShadow","_LightShadow3","_this100","isDirectionalLightShadow","DirectionalLight","_Light4","_this101","isDirectionalLight","AmbientLight","_Light5","_this102","isAmbientLight","RectAreaLight","_Light6","_this103","isRectAreaLight","SphericalHarmonics3","isSphericalHarmonics3","coefficients","zero","getAt","coeff","getIrradianceAt","sh","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_this104","isLightProbe","MaterialLoader","_Loader8","_this105","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","replace","InstancedBufferGeometry","_BufferGeometry16","_this106","isInstancedBufferGeometry","instanceCount","BufferGeometryLoader","_Loader9","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_loadAsync","_asyncToGenerator","_callee","_callee$","_context8","parseAsync","_x5","_x6","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","bindLightTargets","hasImages","_parseAsync","_callee2","_callee2$","_context9","parseImagesAsync","_x7","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee4","_deserializeImage","_deserializedImage2","_callee4$","_context11","_deserializeImage3","_callee3","_url","_callee3$","_context10","_deserializeImage2","_x9","_x8","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_this107","isImageBitmapLoader","createImageBitmap","setOptions","imageBitmap","fetchOptions","promise","res","colorSpaceConversion","_context","AudioContext","window","webkitAudioContext","setContext","AudioLoader","_Loader12","bufferCopy","decodeAudioData","audioBuffer","handleError","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","cameraL","cameraR","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","ArrayCamera","_PerspectiveCamera","_this108","isArrayCamera","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_this109","gain","createGain","connect","destination","timeDelta","_clock","getInput","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_this110","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_this111","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","setValue","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_objects","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","objects","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","mode","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher6","_this112","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","RenderTarget3D","_RenderTarget2","_this113","isRenderTarget3D","RenderTargetArray","_RenderTarget3","_this114","isRenderTargetArray","Uniform","_id","UniformsGroup","_EventDispatcher7","_this115","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_this116","isInstancedInterleavedBuffer","GLBufferAttribute","elementSize","setType","setItemSize","setCount","_matrix","Raycaster","setFromCamera","coords","setFromXRController","intersectObject","ascSort","intersectObjects","propagate","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","Matrix2","isMatrix2","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_this117","positions","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_this118","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh4","sphereSize","_this119","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_this120","GridHelper","_LineSegments2","_this121","PolarGridHelper","_LineSegments3","_this122","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_this123","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_this124","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","nearZ","setPoint","_box","BoxHelper","_LineSegments5","_this125","Box3Helper","_LineSegments6","_this126","PlaneHelper","_Line3","_this127","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_this128","headLength","headWidth","setDirection","setColor","AxesHelper","_LineSegments7","_this129","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","Controls","_EventDispatcher8","_this130","domElement","state","mouseButtons","touches","ONE","TWO","contain","imageAspect","cover","getByteLength","typeByteLength","getTextureTypeByteLength","TextureUtils","revision","__THREE__","_threeCore","require","asyncGeneratorStep","_next","_throw","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","_assertThisInitialized","ReferenceError","valueOf","_setPrototypeOf","_unsupportedIterableToArray","_n","F","_arrayLikeToArray","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","WebGLAttributes","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","updateBuffer","bufferSubData","mergeIndex","previousRange","deleteBuffer","delete","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","batching_pars_vertex","batching_vertex","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphinstance_vertex","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowIntensity","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundCube","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMapTransform","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","_e1$1","WebGLBackground","cubemaps","cubeuvmaps","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","getBackground","usePMREM","forceClear","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","setTest","setMask","autoClearColor","autoClearDepth","autoClearStencil","addToRenderList","renderList","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","vao","bindVertexArray","deleteVertexArrayObject","deleteVertexArray","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","enableVertexAttribArray","vertexAttribDivisor","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","materialDefaultAttributeValues","locationSize","ARRAY_BUFFER","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","setMode","drawArrays","renderInstances","primcount","drawArraysInstanced","renderMultiDraw","starts","counts","drawCount","extension","multiDrawArraysWEBGL","elementCount","renderMultiDrawInstances","multiDrawArraysInstancedWEBGL","WebGLCapabilities","utils","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","textureFormatReadable","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","textureTypeReadable","textureType","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","maxPrecision","logarithmicDepthBuffer","reverseDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","maxSamples","MAX_SAMPLES","isWebGL2","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","_oldActiveCubeFace","_oldActiveMipmapLevel","_oldXrEnabled","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","currentPMREMVersion","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","drawElementsInstanced","multiDrawElementsWEBGL","multiDrawElementsInstancedWEBGL","WebGLInfo","calls","lines","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","WebGLMorphtargets","capabilities","morphTextures","morph","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphNormal","morphColor","disposeTexture","getUniforms","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyShadowTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","emptyTexture2D","SAMPLER_2D_SHADOW","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","pathLength","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","COMPLETION_STATUS_KHR","programIdCount","handleSource","errorLine","split","lines2","join","_m0","getEncodingComponents","encodingMatrix","getShaderErrors","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","getLuminanceFunction","generateVertexExtensions","chunks","extensionClipCullDistance","extensionMultiDraw","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","envMapCubeUVHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customVertexExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","shaderType","shaderName","batching","batchingColor","instancing","instancingColor","instancingMorph","useFog","fogExp2","normalMapObjectSpace","normalMapTangentSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","numLightProbes","decodeVideoTexture","decodeVideoTextureEmissive","opaque","useDepthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","onFirstUse","self","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","programReady","rendererExtensionParallelShaderCompile","isReady","destroy","deleteProgram","usedTimes","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","shaderStage","code","getVertexShaderID","getFragmentShaderID","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","_activeChannels","SUPPORTS_VERTEX_TEXTURES","shaderIDs","getChannel","getParameters","shadows","shaderID","customVertexShaderID","customFragmentShaderID","getReversed","IS_INSTANCEDMESH","IS_BATCHEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_DISPERSION","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","supportsVertexTextures","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","UniformsCache","halfWidth","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","shadowUniforms","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","transmissionRenderTarget","WebGLRenderStates","renderStates","renderStateArray","renderState","fragment","WebGLShadowMap","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","_previousType","activeCubeFace","_state","setBlending","setScissorTest","toVSM","fromVSM","shadowFrameExtents","pars","viewportCount","vp","renderObject","VSMPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","onMaterialDispose","kl","shadowMaterial","reversedFuncs","WebGLState","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","DepthBuffer","reversed","currentDepthMask","currentDepthFunc","currentDepthClear","setReversed","ext","clipControlEXT","LOWER_LEFT_EXT","ZERO_TO_ONE_EXT","NEGATIVE_ONE_TO_ONE_EXT","oldDepth","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentBlendColor","currentBlendAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","drawBuffers","COLOR_ATTACHMENT0","BACK","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","factorToGL","ZERO","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_imageDimensions","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsNewCanvas","maxSize","getDimensions","VideoFrame","textureNeedsGenerateMipmaps","generateMipmap","getTargetType","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RG_INTEGER","RG8UI","RG16UI","RG32UI","RG8I","RG16I","RG32I","RGB_INTEGER","RGB8UI","RGB16UI","RGB32UI","RGB8I","RGB16I","RGB32I","RGBA_INTEGER","RGBA8UI","RGBA16UI","RGBA32UI","RGBA8I","RGBA16I","RGBA32I","RGB","UNSIGNED_INT_5_9_9_9_REV","RGB9_E5","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getInternalDepthFormat","useStencil","depthType","glInternalFormat","DEPTH24_STENCIL8","DEPTH32F_STENCIL8","DEPTH_COMPONENT24","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","getMipLevels","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","sourceProperties","workingPrimaries","texturePrimaries","unpackConversion","NONE","BROWSER_DEFAULT_WEBGL","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","verifyColorSpace","mipmap","useTexStorage","allocateMemory","layerByteLength","layerData","subarray","_iterator3","_step3","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__renderTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","glAttachmentType","DEPTH_STENCIL_ATTACHMENT","DEPTH_ATTACHMENT","isUseMultisampledRTT","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__boundDepthTexture","__depthDisposeCallback","disposeEvent","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","targetType","invalidationArrayRead","invalidationArrayDraw","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","depthStyle","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","blitFramebuffer","invalidateFramebuffer","__useRenderToTexture","naturalWidth","naturalHeight","displayWidth","displayHeight","WebGLUtils","ALPHA","LUMINANCE","LUMINANCE_ALPHA","DEPTH_COMPONENT","DEPTH_STENCIL","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","inputSource","hand","_iterator4","_step4","inputjoint","_getHandJoint","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator5","_step5","jointPose","getJointPose","joint","jointRadius","indexTip","thumbTip","distanceToPinch","handedness","gripSpace","getPose","targetRaySpace","jointName","_occlusion_vertex","_occlusion_fragment","WebXRDepthSensing","depthNear","depthFar","depthData","texProps","getMesh","cameraXR","depthColor","depthWidth","depthHeight","getDepthTexture","WebXRManager","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","glBinding","glProjLayer","glBaseLayer","xrFrame","depthSensing","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","currentSize","currentPixelRatio","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setPixelRatio","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","useLayers","layerInit","depthFormat","glDepthFormat","projectionlayerInit","xrCompatible","makeXRCompatible","getPixelRatio","enabledFeatures","includes","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","scaleFactor","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","ignoreDepthValues","setFoveation","requestReferenceSpace","_x2","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","updateUserCamera","getCamera","getFoveation","fixedFoveation","hasDepthSensing","getDepthSensingMesh","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","getDepthInformation","isValid","detectedPlanes","_e1","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","refreshMaterialUniforms","pixelRatio","refreshUniformsCommon","refreshUniformsToon","refreshUniformsPhong","refreshUniformsStandard","refreshUniformsPhysical","refreshUniformsMatcap","refreshUniformsDistance","refreshUniformsLine","refreshUniformsDash","refreshUniformsPoints","refreshUniformsSprites","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","uniformArray","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","indexString","cachedObject","chunkSize","chunkOffset","chunkPadding","boundary","chunkStart","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","_parameters$reverseDe","isWebGLRenderer","_alpha","WebGLRenderingContext","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","_outputColorSpace","toneMappingExposure","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","transmissionResolutionScale","_currentProjectionMatrix","_vector4","_emptyScene","_renderBackground","getTargetPixelRatio","contextName","contextAttributes","onContextLost","onContextRestore","onContextCreationError","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","prepareMaterial","getProgram","targetScene","material2","compileAsync","checkMaterialsReady","depthSensingMesh","projectObject","opaqueObjects","transmissiveObjects","camera2","renderTransmissionPass","renderScene","transparentObjects","renderObjects","activeViewport","currentToneMapping","currentCameraViewport","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","uniformsList","getUniformList","progUniforms","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","_scratchFrameBuffer","useDefaultFramebuffer","framebufferBound","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","readPixels","readRenderTargetPixelsAsync","_ref2","glBuffer","currFramebuffer","PIXEL_PACK_BUFFER","STREAM_READ","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","getBufferSubData","deleteSync","_x3","_x4","copyFramebufferToTexture","levelScale","copyTexSubImage2D","_srcFramebuffer","_dstFramebuffer","copyTextureToTexture","srcTexture","dstTexture","srcRegion","dstPosition","srcLevel","dstLevel","dstX","dstY","dstZ","glTarget","currentUnpackRowLen","UNPACK_ROW_LENGTH","currentUnpackImageHeight","UNPACK_IMAGE_HEIGHT","currentUnpackSkipPixels","UNPACK_SKIP_PIXELS","currentUnpackSkipRows","UNPACK_SKIP_ROWS","currentUnpackSkipImages","UNPACK_SKIP_IMAGES","isSrc3D","isDst3D","srcTextureProperties","dstTextureProperties","srcRenderTargetProperties","dstRenderTargetProperties","copyTexSubImage3D","copyTextureToTexture3D","initRenderTarget","resetState","drawingBufferColorspace","_three","_changeEvent","_startEvent","_endEvent","_plane","_TILT_LIMIT","_v","_twoPI","_STATE","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","_EPS","OrbitControls","_Controls","cursor","minDistance","minZoom","maxZoom","minTargetRadius","maxTargetRadius","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","keyRotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","zoomToCursor","autoRotate","autoRotateSpeed","UP","BOTTOM","target0","position0","zoom0","_domElementKeyEvents","_lastPosition","_lastQuaternion","_lastTargetPosition","_quat","_quatInverse","_spherical","_sphericalDelta","_panOffset","_rotateStart","_rotateEnd","_rotateDelta","_panStart","_panEnd","_panDelta","_dollyStart","_dollyEnd","_dollyDelta","_dollyDirection","_mouse","_performCursorZoom","_pointers","_pointerPositions","_controlActive","_onPointerMove","onPointerMove","_onPointerDown","onPointerDown","_onPointerUp","onPointerUp","_onContextMenu","onContextMenu","_onMouseWheel","onMouseWheel","_onKeyDown","onKeyDown","_onTouchStart","onTouchStart","_onTouchMove","onTouchMove","_onMouseDown","onMouseDown","_onMouseMove","onMouseMove","_interceptControlDown","interceptControlDown","_interceptControlUp","interceptControlUp","passive","getRootNode","capture","touchAction","stopListenToKeyEvents","getPolarAngle","getAzimuthalAngle","getDistance","listenToKeyEvents","saveState","_rotateLeft","_getAutoRotationAngle","zoomChanged","_clampDistance","prevRadius","newRadius","radiusDelta","mouseBefore","prevZoom","mouseAfter","_getZoomScale","normalizedDelta","_rotateUp","_panLeft","objectMatrix","_panUp","_pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","_dollyOut","dollyScale","_dollyIn","_updateZoomParameters","rect","getBoundingClientRect","dist","_handleMouseDownRotate","clientX","clientY","_handleMouseDownDolly","_handleMouseDownPan","_handleMouseMoveRotate","_handleMouseMoveDolly","_handleMouseMovePan","_handleMouseWheel","_handleKeyDown","ctrlKey","metaKey","shiftKey","_handleTouchStartRotate","pageX","pageY","_getSecondPointerPosition","_handleTouchStartPan","_handleTouchStartDolly","_handleTouchStartDollyPan","_handleTouchStartDollyRotate","_handleTouchMoveRotate","_handleTouchMovePan","_handleTouchMoveDolly","centerX","centerY","_handleTouchMoveDollyPan","_handleTouchMoveDollyRotate","_addPointer","pointerId","_removePointer","_isTrackingPointer","_trackPointer","_customWheelEvent","deltaMode","newEvent","setPointerCapture","pointerType","releasePointerCapture","mouseAction","button","THREE","_interopRequireWildcard","_OrbitControls","_stars","_interopRequireDefault","_sun","_mercury","_venus","_earth","_mars","_jupiter","_saturn","_saturnRing","_uranus","_uranusRing","_neptune","_pluto","__esModule","default","_getRequireWildcardCache","getOwnPropertyDescriptor","innerWidth","innerHeight","appendChild","orbit","ambientLight","pointLight","starsTexture","textureLoader","sunGeometry","sunMaterial","sunTexture","sun","createPlanet","ring","planet","planetMaterial","obj","ringGeo","ringMat","ringMesh","mercury","mercuryTexture","venus","venusTexture","earth","earthTexture","mars","marsTexture","jupiter","jupiterTexture","saturn","saturnTexture","saturnRingTexture","uranus","uranusTexture","uranusRingTexture","neptune","neptuneTexture","pluto","plutoTexture","animate","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","some"],"mappings":"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","file":"script.d573be0b.js","sourceRoot":"../src","sourcesContent":["/**\n * @license\n * Copyright 2010-2024 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '172';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AgXToneMapping = 6;\nconst NeutralToneMapping = 7;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst UnsignedInt5999Type = 35902;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBIntegerFormat = 1032;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst RGBDepthPacking = 3202;\nconst RGDepthPacking = 3203;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\nfunction probeAsync( gl, sync, interval ) {\n\n\treturn new Promise( function ( resolve, reject ) {\n\n\t\tfunction probe() {\n\n\t\t\tswitch ( gl.clientWaitSync( sync, gl.SYNC_FLUSH_COMMANDS_BIT, 0 ) ) {\n\n\t\t\t\tcase gl.WAIT_FAILED:\n\t\t\t\t\treject();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.TIMEOUT_EXPIRED:\n\t\t\t\t\tsetTimeout( probe, interval );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tresolve();\n\n\t\t\t}\n\n\t\t}\n\n\t\tsetTimeout( probe, interval );\n\n\t} );\n\n}\n\nfunction toNormalizedProjectionMatrix( projectionMatrix ) {\n\n\tconst m = projectionMatrix.elements;\n\n\t// Convert [-1, 1] to [0, 1] projection matrix\n\tm[ 2 ] = 0.5 * m[ 2 ] + 0.5 * m[ 3 ];\n\tm[ 6 ] = 0.5 * m[ 6 ] + 0.5 * m[ 7 ];\n\tm[ 10 ] = 0.5 * m[ 10 ] + 0.5 * m[ 11 ];\n\tm[ 14 ] = 0.5 * m[ 14 ] + 0.5 * m[ 15 ];\n\n}\n\nfunction toReversedProjectionMatrix( projectionMatrix ) {\n\n\tconst m = projectionMatrix.elements;\n\tconst isPerspectiveMatrix = m[ 11 ] === - 1;\n\n\t// Reverse [0, 1] projection matrix\n\tif ( isPerspectiveMatrix ) {\n\n\t\tm[ 10 ] = - m[ 10 ] - 1;\n\t\tm[ 14 ] = - m[ 14 ];\n\n\t} else {\n\n\t\tm[ 10 ] = - m[ 10 ];\n\t\tm[ 14 ] = - m[ 14 ] + 1;\n\n\t}\n\n}\n\nconst LINEAR_REC709_TO_XYZ = /*@__PURE__*/ new Matrix3().set(\n\t0.4123908, 0.3575843, 0.1804808,\n\t0.2126390, 0.7151687, 0.0721923,\n\t0.0193308, 0.1191948, 0.9505322\n);\n\nconst XYZ_TO_LINEAR_REC709 = /*@__PURE__*/ new Matrix3().set(\n\t3.2409699, - 1.5373832, - 0.4986108,\n\t- 0.9692436, 1.8759675, 0.0415551,\n\t0.0556301, - 0.2039770, 1.0569715\n);\n\nfunction createColorManagement() {\n\n\tconst ColorManagement = {\n\n\t\tenabled: true,\n\n\t\tworkingColorSpace: LinearSRGBColorSpace,\n\n\t\t/**\n\t\t * Implementations of supported color spaces.\n\t\t *\n\t\t * Required:\n\t\t *\t- primaries: chromaticity coordinates [ rx ry gx gy bx by ]\n\t\t *\t- whitePoint: reference white [ x y ]\n\t\t *\t- transfer: transfer function (pre-defined)\n\t\t *\t- toXYZ: Matrix3 RGB to XYZ transform\n\t\t *\t- fromXYZ: Matrix3 XYZ to RGB transform\n\t\t *\t- luminanceCoefficients: RGB luminance coefficients\n\t\t *\n\t\t * Optional:\n\t\t *  - outputColorSpaceConfig: { drawingBufferColorSpace: ColorSpace }\n\t\t *  - workingColorSpaceConfig: { unpackColorSpace: ColorSpace }\n\t\t *\n\t\t * Reference:\n\t\t * - https://www.russellcottrell.com/photo/matrixCalculator.htm\n\t\t */\n\t\tspaces: {},\n\n\t\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\t\treturn color;\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ sourceColorSpace ].transfer === SRGBTransfer ) {\n\n\t\t\t\tcolor.r = SRGBToLinear( color.r );\n\t\t\t\tcolor.g = SRGBToLinear( color.g );\n\t\t\t\tcolor.b = SRGBToLinear( color.b );\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ sourceColorSpace ].primaries !== this.spaces[ targetColorSpace ].primaries ) {\n\n\t\t\t\tcolor.applyMatrix3( this.spaces[ sourceColorSpace ].toXYZ );\n\t\t\t\tcolor.applyMatrix3( this.spaces[ targetColorSpace ].fromXYZ );\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ targetColorSpace ].transfer === SRGBTransfer ) {\n\n\t\t\t\tcolor.r = LinearToSRGB( color.r );\n\t\t\t\tcolor.g = LinearToSRGB( color.g );\n\t\t\t\tcolor.b = LinearToSRGB( color.b );\n\n\t\t\t}\n\n\t\t\treturn color;\n\n\t\t},\n\n\t\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t\t},\n\n\t\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t\t},\n\n\t\tgetPrimaries: function ( colorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].primaries;\n\n\t\t},\n\n\t\tgetTransfer: function ( colorSpace ) {\n\n\t\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\t\treturn this.spaces[ colorSpace ].transfer;\n\n\t\t},\n\n\t\tgetLuminanceCoefficients: function ( target, colorSpace = this.workingColorSpace ) {\n\n\t\t\treturn target.fromArray( this.spaces[ colorSpace ].luminanceCoefficients );\n\n\t\t},\n\n\t\tdefine: function ( colorSpaces ) {\n\n\t\t\tObject.assign( this.spaces, colorSpaces );\n\n\t\t},\n\n\t\t// Internal APIs\n\n\t\t_getMatrix: function ( targetMatrix, sourceColorSpace, targetColorSpace ) {\n\n\t\t\treturn targetMatrix\n\t\t\t\t.copy( this.spaces[ sourceColorSpace ].toXYZ )\n\t\t\t\t.multiply( this.spaces[ targetColorSpace ].fromXYZ );\n\n\t\t},\n\n\t\t_getDrawingBufferColorSpace: function ( colorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].outputColorSpaceConfig.drawingBufferColorSpace;\n\n\t\t},\n\n\t\t_getUnpackColorSpace: function ( colorSpace = this.workingColorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].workingColorSpaceConfig.unpackColorSpace;\n\n\t\t}\n\n\t};\n\n\t/******************************************************************************\n\t * sRGB definitions\n\t */\n\n\tconst REC709_PRIMARIES = [ 0.640, 0.330, 0.300, 0.600, 0.150, 0.060 ];\n\tconst REC709_LUMINANCE_COEFFICIENTS = [ 0.2126, 0.7152, 0.0722 ];\n\tconst D65 = [ 0.3127, 0.3290 ];\n\n\tColorManagement.define( {\n\n\t\t[ LinearSRGBColorSpace ]: {\n\t\t\tprimaries: REC709_PRIMARIES,\n\t\t\twhitePoint: D65,\n\t\t\ttransfer: LinearTransfer,\n\t\t\ttoXYZ: LINEAR_REC709_TO_XYZ,\n\t\t\tfromXYZ: XYZ_TO_LINEAR_REC709,\n\t\t\tluminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n\t\t\tworkingColorSpaceConfig: { unpackColorSpace: SRGBColorSpace },\n\t\t\toutputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\n\t\t},\n\n\t\t[ SRGBColorSpace ]: {\n\t\t\tprimaries: REC709_PRIMARIES,\n\t\t\twhitePoint: D65,\n\t\t\ttransfer: SRGBTransfer,\n\t\t\ttoXYZ: LINEAR_REC709_TO_XYZ,\n\t\t\tfromXYZ: XYZ_TO_LINEAR_REC709,\n\t\t\tluminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n\t\t\toutputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\n\t\t},\n\n\t} );\n\n\treturn ColorManagement;\n\n}\n\nconst ColorManagement = /*@__PURE__*/ createColorManagement();\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\t\tthis.dataReady = true;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tthis.colorSpace = colorSpace;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.renderTarget = null; // assign texture to a render target\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.pmremVersion = 0; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.renderTarget = source.renderTarget;\n\t\tthis.isRenderTargetTexture = source.isRenderTargetTexture;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tset needsPMREMUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.pmremVersion ++;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\t\tthis.w /= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\t\tthis.w = e[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\t\tthis.z = clamp( this.z, min.z, max.z );\n\t\tthis.w = clamp( this.w, min.w, max.w );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\t\tthis.z = clamp( this.z, minVal, maxVal );\n\t\tthis.w = clamp( this.w, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tresolveDepthBuffer: true,\n\t\t\tresolveStencilBuffer: true,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0,\n\t\t\tcount: 1\n\t\t}, options );\n\n\t\tconst texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\ttexture.flipY = false;\n\t\ttexture.generateMipmaps = options.generateMipmaps;\n\t\ttexture.internalFormat = options.internalFormat;\n\n\t\tthis.textures = [];\n\n\t\tconst count = options.count;\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.textures[ i ] = texture.clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\t\t\tthis.textures[ i ].renderTarget = this;\n\n\t\t}\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = options.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = options.resolveStencilBuffer;\n\n\t\tthis._depthTexture = null;\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures[ 0 ];\n\n\t}\n\n\tset texture( value ) {\n\n\t\tthis.textures[ 0 ] = value;\n\n\t}\n\n\tset depthTexture( current ) {\n\n\t\tif ( this._depthTexture !== null ) this._depthTexture.renderTarget = null;\n\t\tif ( current !== null ) current.renderTarget = this;\n\n\t\tthis._depthTexture = current;\n\n\t}\n\n\tget depthTexture() {\n\n\t\treturn this._depthTexture;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.textures.length; i < il; i ++ ) {\n\n\t\t\t\tthis.textures[ i ].image.width = width;\n\t\t\t\tthis.textures[ i ].image.height = height;\n\t\t\t\tthis.textures[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.textures.length = 0;\n\n\t\tfor ( let i = 0, il = source.textures.length; i < il; i ++ ) {\n\n\t\t\tthis.textures[ i ] = source.textures[ i ].clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\t\t\tthis.textures[ i ].renderTarget = this;\n\n\t\t}\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = source.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = source.resolveStencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in Data3DTexture directly.\n\t\t//\n\t\t//\tconst texture = new THREE.Data3DTexture( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update = true ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// sets this quaternion to a uniform random unit quaternnion\n\n\t\t// Ken Shoemake\n\t\t// Uniform random rotations\n\t\t// D. Kirk, editor, Graphics Gems III, pages 124-132. Academic Press, New York, 1992.\n\n\t\tconst theta1 = 2 * Math.PI * Math.random();\n\t\tconst theta2 = 2 * Math.PI * Math.random();\n\n\t\tconst x0 = Math.random();\n\t\tconst r1 = Math.sqrt( 1 - x0 );\n\t\tconst r2 = Math.sqrt( x0 );\n\n\t\treturn this.set(\n\t\t\tr1 * Math.sin( theta1 ),\n\t\t\tr1 * Math.cos( theta1 ),\n\t\t\tr2 * Math.sin( theta2 ),\n\t\t\tr2 * Math.cos( theta2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\t\tthis.z = clamp( this.z, min.z, max.z );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\t\tthis.z = clamp( this.z, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst theta = Math.random() * Math.PI * 2;\n\t\tconst u = Math.random() * 2 - 1;\n\t\tconst c = Math.sqrt( 1 - u * u );\n\n\t\tthis.x = c * Math.cos( theta );\n\t\tthis.y = u;\n\t\tthis.z = c * Math.sin( theta );\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x >= this.min.x && point.x <= this.max.x &&\n\t\t\tpoint.y >= this.min.y && point.y <= this.max.y &&\n\t\t\tpoint.z >= this.min.z && point.z <= this.max.z;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x >= this.min.x && box.min.x <= this.max.x &&\n\t\t\tbox.max.y >= this.min.y && box.min.y <= this.max.y &&\n\t\t\tbox.max.z >= this.min.z && box.min.z <= this.max.z;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.isSphere = true;\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$2 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$2.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$2, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nconst _childaddedEvent = { type: 'childadded', child: null };\nconst _childremovedEvent = { type: 'childremoved', child: null };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tobject.removeFromParent();\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t\t_childaddedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t\t_childaddedEvent.child = null;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t\t_childremovedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childremovedEvent );\n\t\t\t_childremovedEvent.child = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tobject.removeFromParent();\n\t\tobject.parent = this;\n\t\tthis.children.push( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t_childaddedEvent.child = object;\n\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t_childaddedEvent.child = null;\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// make sure descendants are updated if required\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tchild.updateMatrixWorld( force );\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldAutoUpdate === true ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// make sure descendants are updated\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxInstanceCount = this._maxInstanceCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this._colorsTexture !== null ) object.colorsTexture = this._colorsTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$2 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nconst _v40 = /*@__PURE__*/ new Vector4();\nconst _v41 = /*@__PURE__*/ new Vector4();\nconst _v42 = /*@__PURE__*/ new Vector4();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\ttarget.set( 0, 0, 0 );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\t// if the triangle is degenerate then we can't contain a point\n\t\tif ( this.getBarycoord( point, a, b, c, _v3$2 ) === null ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn ( _v3$2.x >= 0 ) && ( _v3$2.y >= 0 ) && ( ( _v3$2.x + _v3$2.y ) <= 1 );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3$2 ) === null ) {\n\n\t\t\ttarget.x = 0;\n\t\t\ttarget.y = 0;\n\t\t\tif ( 'z' in target ) target.z = 0;\n\t\t\tif ( 'w' in target ) target.w = 0;\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$2.x );\n\t\ttarget.addScaledVector( v2, _v3$2.y );\n\t\ttarget.addScaledVector( v3, _v3$2.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic getInterpolatedAttribute( attr, i1, i2, i3, barycoord, target ) {\n\n\t\t_v40.setScalar( 0 );\n\t\t_v41.setScalar( 0 );\n\t\t_v42.setScalar( 0 );\n\n\t\t_v40.fromBufferAttribute( attr, i1 );\n\t\t_v41.fromBufferAttribute( attr, i2 );\n\t\t_v42.fromBufferAttribute( attr, i3 );\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( _v40, barycoord.x );\n\t\ttarget.addScaledVector( _v41, barycoord.y );\n\t\ttarget.addScaledVector( _v42, barycoord.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\t// onBeforeRender and onBeforeCompile only supported in WebGLRenderer\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== undefined && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.dispersion !== undefined ) data.dispersion = this.dispersion;\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapRotation !== undefined ) data.envMapRotation = this.envMapRotation.toArray();\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {\n\n\t\tconsole.warn( 'Material: onBuild() has been removed.' ); // @deprecated, r166\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.indirect = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetIndirect( indirect ) {\n\n\t\tthis.indirect = indirect;\n\n\t\treturn this;\n\n\t}\n\n\tgetIndirect() {\n\n\t\treturn this.indirect;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute === undefined ) {\n\n\t\t\tconst position = [];\n\n\t\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tconst point = points[ i ];\n\t\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\t} else {\n\n\t\t\tconst l = Math.min( points.length, positionAttribute.count ); // make sure data do not exceed buffer size\n\n\t\t\tfor ( let i = 0; i < l; i ++ ) {\n\n\t\t\t\tconst point = points[ i ];\n\t\t\t\tpositionAttribute.setXYZ( i, point.x, point.y, point.z || 0 );\n\n\t\t\t}\n\n\t\t\tif ( points.length > positionAttribute.count ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry.' );\n\n\t\t\t}\n\n\t\t\tpositionAttribute.needsUpdate = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst positionAttribute = attributes.position;\n\t\tconst normalAttribute = attributes.normal;\n\t\tconst uvAttribute = attributes.uv;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * positionAttribute.count ), 4 ) );\n\n\t\t}\n\n\t\tconst tangentAttribute = this.getAttribute( 'tangent' );\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( positionAttribute, a );\n\t\t\tvB.fromBufferAttribute( positionAttribute, b );\n\t\t\tvC.fromBufferAttribute( positionAttribute, c );\n\n\t\t\tuvA.fromBufferAttribute( uvAttribute, a );\n\t\t\tuvB.fromBufferAttribute( uvAttribute, b );\n\t\t\tuvC.fromBufferAttribute( uvAttribute, c );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: index.count\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindex.getX( j + 0 ),\n\t\t\t\t\tindex.getX( j + 1 ),\n\t\t\t\t\tindex.getX( j + 2 )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromBufferAttribute( normalAttribute, v );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangentAttribute.setXYZW( v, tmp.x, tmp.y, tmp.z, w );\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( index.getX( j + 0 ) );\n\t\t\t\thandleVertex( index.getX( j + 1 ) );\n\t\t\t\thandleVertex( index.getX( j + 2 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection$1( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection$1( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tconst barycoord = new Vector3();\n\t\tTriangle.getBarycoord( _intersectionPoint, _vA$1, _vB$1, _vC$1, barycoord );\n\n\t\tif ( uv ) {\n\n\t\t\tintersection.uv = Triangle.getInterpolatedAttribute( uv, a, b, c, barycoord, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\tintersection.uv1 = Triangle.getInterpolatedAttribute( uv1, a, b, c, barycoord, new Vector2() );\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\tintersection.normal = Triangle.getInterpolatedAttribute( normal, a, b, c, barycoord, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\t\tintersection.barycoord = barycoord;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\tif ( currentRenderTarget === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\t// https://github.com/mrdoob/three.js/issues/27868\n\tif ( currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\treturn currentRenderTarget.texture.colorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tclipCullDistance: false, // set to use vertex shader clipping\n\t\t\tmultiDraw: false // set to use vertex shader multi_draw / enable gl_DrawID\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _v3$1 = /*@__PURE__*/ new Vector3();\nconst _minTarget = /*@__PURE__*/ new Vector2();\nconst _maxTarget = /*@__PURE__*/ new Vector2();\n\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * @param {number} focalLength - Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t *\n\t * @returns {number}\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Computes the 2D bounds of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Sets minTarget and maxTarget to the coordinates of the lower-left and upper-right corners of the view rectangle.\n\t *\n\t * @param {number} distance\n\t * @param {Vector2} minTarget\n\t * @param {Vector2} maxTarget\n\t */\n\tgetViewBounds( distance, minTarget, maxTarget ) {\n\n\t\t_v3$1.set( - 1, - 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tminTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t\t_v3$1.set( 1, 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tmaxTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t}\n\n\t/**\n\t * Computes the width and height of the camera's viewable rectangle at a given distance along the viewing direction.\n\t *\n\t * @param {number} distance\n\t * @param {Vector2} target - Vector2 target used to store result where x is width and y is height.\n\t * @returns {Vector2}\n\t */\n\tgetViewSize( distance, target ) {\n\n\t\tthis.getViewBounds( distance, _minTarget, _maxTarget );\n\n\t\treturn target.subVectors( _maxTarget, _minTarget );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t *\n\t * @param {number} fullWidth\n\t * @param {number} fullHeight\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {number} width\n\t * @param {number} height\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\t\tthis.backgroundRotation = new Euler();\n\n\t\tthis.environmentIntensity = 1;\n\t\tthis.environmentRotation = new Euler();\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\t\tthis.backgroundRotation.copy( source.backgroundRotation );\n\n\t\tthis.environmentIntensity = source.environmentIntensity;\n\t\tthis.environmentRotation.copy( source.environmentRotation );\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\t\tdata.object.backgroundRotation = this.backgroundRotation.toArray();\n\n\t\tif ( this.environmentIntensity !== 1 ) data.object.environmentIntensity = this.environmentIntensity;\n\t\tdata.object.environmentRotation = this.environmentRotation.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.data.stride + this.offset + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tremoveLevel( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0; i < levels.length; i ++ ) {\n\n\t\t\tif ( levels[ i ].distance === distance ) {\n\n\t\t\t\tconst removedElements = levels.splice( i, 1 );\n\t\t\t\tthis.remove( removedElements[ 0 ].object );\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$5.copy( this.boundingSphere );\n\t\t_sphere$5.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$5 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\t\tthis.morphTexture = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$4.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$4 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.morphTexture !== null ) this.morphTexture = source.morphTexture.clone();\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tgetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tconst len = objectInfluences.length + 1; // All influences + the baseInfluenceSum\n\n\t\tconst dataIndex = index * len + 1; // Skip the baseInfluenceSum at the beginning\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tobjectInfluences[ i ] = array[ dataIndex + i ];\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ).fill( 1 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tsetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst len = objectInfluences.length + 1; // morphBaseInfluence + all influences\n\n\t\tif ( this.morphTexture === null ) {\n\n\t\t\tthis.morphTexture = new DataTexture( new Float32Array( len * this.count ), len, this.count, RedFormat, FloatType );\n\n\t\t}\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t}\n\n\t\tconst morphBaseInfluence = this.geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tconst dataIndex = len * index;\n\n\t\tarray[ dataIndex ] = morphBaseInfluence;\n\n\t\tarray.set( objectInfluences, dataIndex + 1 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\tif ( this.morphTexture !== null ) {\n\n\t\t\tthis.morphTexture.dispose();\n\t\t\tthis.morphTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$3 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$3.center.set( 0, 0, 0 );\n\t\t_sphere$3.radius = 0.7071067811865476;\n\t\t_sphere$3.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$3 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$6.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$6.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$6.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$6 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction ascIdSort( a, b ) {\n\n\treturn a - b;\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( start, count, z, index ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\t\t\t\tindex: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = start;\n\t\titem.count = count;\n\t\titem.z = z;\n\t\titem.index = index;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _whiteColor = /*@__PURE__*/ new Color( 1, 1, 1 );\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _forward = /*@__PURE__*/ new Vector3();\nconst _temp = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\n// safely copies array contents to a potentially smaller array\nfunction copyArrayContents( src, target ) {\n\n\tif ( src.constructor !== target.constructor ) {\n\n\t\t// if arrays are of a different type (eg due to index size increasing) then data must be per-element copied\n\t\tconst len = Math.min( src.length, target.length );\n\t\tfor ( let i = 0; i < len; i ++ ) {\n\n\t\t\ttarget[ i ] = src[ i ];\n\n\t\t}\n\n\t} else {\n\n\t\t// if the arrays use the same data layout we can use a fast block copy\n\t\tconst len = Math.min( src.length, target.length );\n\t\ttarget.set( new src.constructor( src.buffer, 0, len ) );\n\n\t}\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxInstanceCount() {\n\n\t\treturn this._maxInstanceCount;\n\n\t}\n\n\tget instanceCount() {\n\n\t\treturn this._instanceInfo.length - this._availableInstanceIds.length;\n\n\t}\n\n\tget unusedVertexCount() {\n\n\t\treturn this._maxVertexCount - this._nextVertexStart;\n\n\t}\n\n\tget unusedIndexCount() {\n\n\t\treturn this._maxIndexCount - this._nextIndexStart;\n\n\t}\n\n\tconstructor( maxInstanceCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\t// stores visible, active, and geometry id per instance and reserved buffer ranges for geometries\n\t\tthis._instanceInfo = [];\n\t\tthis._geometryInfo = [];\n\n\t\t// instance, geometry ids that have been set as inactive, and are available to be overwritten\n\t\tthis._availableInstanceIds = [];\n\t\tthis._availableGeometryIds = [];\n\n\t\t// used to track where the next point is that geometry should be inserted\n\t\tthis._nextIndexStart = 0;\n\t\tthis._nextVertexStart = 0;\n\t\tthis._geometryCount = 0;\n\n\t\t// flags\n\t\tthis._visibilityChanged = true;\n\t\tthis._geometryInitialized = false;\n\n\t\t// cached user options\n\t\tthis._maxInstanceCount = maxInstanceCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\t// buffers for multi draw\n\t\tthis._multiDrawCounts = new Int32Array( maxInstanceCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxInstanceCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._multiDrawInstances = null;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\t\tthis._indirectTexture = null;\n\t\tthis._colorsTexture = null;\n\n\t\tthis._initMatricesTexture();\n\t\tthis._initIndirectTexture();\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initIndirectTexture() {\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount );\n\t\tsize = Math.ceil( size );\n\n\t\tconst indirectArray = new Uint32Array( size * size );\n\t\tconst indirectTexture = new DataTexture( indirectArray, size, size, RedIntegerFormat, UnsignedIntType );\n\n\t\tthis._indirectTexture = indirectTexture;\n\n\t}\n\n\t_initColorsTexture() {\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount );\n\t\tsize = Math.ceil( size );\n\n\t\t// 4 floats per RGBA pixel initialized to white\n\t\tconst colorsArray = new Float32Array( size * size * 4 ).fill( 1 );\n\t\tconst colorsTexture = new DataTexture( colorsArray, size, size, RGBAFormat, FloatType );\n\t\tcolorsTexture.colorSpace = ColorManagement.workingColorSpace;\n\n\t\tthis._colorsTexture = colorsTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new BufferAttribute( dstArray, itemSize, normalized );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\t// Reserve last u16 index for primitive restart.\n\t\t\t\tconst indexArray = maxVertexCount > 65535\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry attributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `THREE.BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tvalidateInstanceId( instanceId ) {\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tif ( instanceId < 0 || instanceId >= instanceInfo.length || instanceInfo[ instanceId ].active === false ) {\n\n\t\t\tthrow new Error( `THREE.BatchedMesh: Invalid instanceId ${instanceId}. Instance is either out of range or has been deleted.` );\n\n\t\t}\n\n\t}\n\n\tvalidateGeometryId( geometryId ) {\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tif ( geometryId < 0 || geometryId >= geometryInfoList.length || geometryInfoList[ geometryId ].active === false ) {\n\n\t\t\tthrow new Error( `THREE.BatchedMesh: Invalid geometryId ${geometryId}. Geometry is either out of range or has been deleted.` );\n\n\t\t}\n\n\t}\n\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst instanceInfo = this._instanceInfo;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].active === false ) continue;\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst instanceInfo = this._instanceInfo;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].active === false ) continue;\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddInstance( geometryId ) {\n\n\t\tconst atCapacity = this._instanceInfo.length >= this.maxInstanceCount;\n\n\t\t// ensure we're not over geometry\n\t\tif ( atCapacity && this._availableInstanceIds.length === 0 ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Maximum item count reached.' );\n\n\t\t}\n\n\t\tconst instanceInfo = {\n\t\t\tvisible: true,\n\t\t\tactive: true,\n\t\t\tgeometryIndex: geometryId,\n\t\t};\n\n\t\tlet drawId = null;\n\n\t\t// Prioritize using previously freed instance ids\n\t\tif ( this._availableInstanceIds.length > 0 ) {\n\n\t\t\tthis._availableInstanceIds.sort( ascIdSort );\n\n\t\t\tdrawId = this._availableInstanceIds.shift();\n\t\t\tthis._instanceInfo[ drawId ] = instanceInfo;\n\n\t\t} else {\n\n\t\t\tdrawId = this._instanceInfo.length;\n\t\t\tthis._instanceInfo.push( instanceInfo );\n\n\t\t}\n\n\t\tconst matricesTexture = this._matricesTexture;\n\t\t_matrix$1.identity().toArray( matricesTexture.image.data, drawId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\tconst colorsTexture = this._colorsTexture;\n\t\tif ( colorsTexture ) {\n\n\t\t\t_whiteColor.toArray( colorsTexture.image.data, drawId * 4 );\n\t\t\tcolorsTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tthis._visibilityChanged = true;\n\t\treturn drawId;\n\n\t}\n\n\taddGeometry( geometry, reservedVertexCount = - 1, reservedIndexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst geometryInfo = {\n\t\t\t// geometry information\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\treservedVertexCount: - 1,\n\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t\treservedIndexCount: - 1,\n\n\t\t\t// draw range information\n\t\t\tstart: - 1,\n\t\t\tcount: - 1,\n\n\t\t\t// state\n\t\t\tboundingBox: null,\n\t\t\tboundingSphere: null,\n\t\t\tactive: true,\n\t\t};\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tgeometryInfo.vertexStart = this._nextVertexStart;\n\t\tgeometryInfo.reservedVertexCount = reservedVertexCount === - 1 ? geometry.getAttribute( 'position' ).count : reservedVertexCount;\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tgeometryInfo.indexStart = this._nextIndexStart;\n\t\t\tgeometryInfo.reservedIndexCount = reservedIndexCount === - 1 ? index.count : reservedIndexCount;\n\n\t\t}\n\n\t\tif (\n\t\t\tgeometryInfo.indexStart !== - 1 &&\n\t\t\tgeometryInfo.indexStart + geometryInfo.reservedIndexCount > this._maxIndexCount ||\n\t\t\tgeometryInfo.vertexStart + geometryInfo.reservedVertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\t// update id\n\t\tlet geometryId;\n\t\tif ( this._availableGeometryIds.length > 0 ) {\n\n\t\t\tthis._availableGeometryIds.sort( ascIdSort );\n\n\t\t\tgeometryId = this._availableGeometryIds.shift();\n\t\t\tgeometryInfoList[ geometryId ] = geometryInfo;\n\n\n\t\t} else {\n\n\t\t\tgeometryId = this._geometryCount;\n\t\t\tthis._geometryCount ++;\n\t\t\tgeometryInfoList.push( geometryInfo );\n\n\t\t}\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\t// increment the next geometry position\n\t\tthis._nextIndexStart = geometryInfo.indexStart + geometryInfo.reservedIndexCount;\n\t\tthis._nextVertexStart = geometryInfo.vertexStart + geometryInfo.reservedVertexCount;\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( geometryId, geometry ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > geometryInfo.reservedIndexCount ||\n\t\t\tgeometry.attributes.position.count > geometryInfo.reservedVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry buffer data over\n\t\tconst vertexStart = geometryInfo.vertexStart;\n\t\tconst reservedVertexCount = geometryInfo.reservedVertexCount;\n\t\tgeometryInfo.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = reservedVertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\t\t\tdstAttribute.addUpdateRange( vertexStart * itemSize, reservedVertexCount * itemSize );\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = geometryInfo.indexStart;\n\t\t\tconst reservedIndexCount = geometryInfo.reservedIndexCount;\n\t\t\tgeometryInfo.indexCount = geometry.getIndex().count;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedIndexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\t\t\tdstIndex.addUpdateRange( indexStart, geometryInfo.reservedIndexCount );\n\n\t\t}\n\n\t\t// update the draw range\n\t\tgeometryInfo.start = hasIndex ? geometryInfo.indexStart : geometryInfo.vertexStart;\n\t\tgeometryInfo.count = hasIndex ? geometryInfo.indexCount : geometryInfo.vertexCount;\n\n\t\t// store the bounding boxes\n\t\tgeometryInfo.boundingBox = null;\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tgeometryInfo.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tgeometryInfo.boundingSphere = null;\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tgeometryInfo.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tthis._visibilityChanged = true;\n\t\treturn geometryId;\n\n\t}\n\n\tdeleteGeometry( geometryId ) {\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tif ( geometryId >= geometryInfoList.length || geometryInfoList[ geometryId ].active === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// delete any instances associated with this geometry\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].geometryIndex === geometryId ) {\n\n\t\t\t\tthis.deleteInstance( i );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometryInfoList[ geometryId ].active = false;\n\t\tthis._availableGeometryIds.push( geometryId );\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteInstance( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tthis._instanceInfo[ instanceId ].active = false;\n\t\tthis._availableInstanceIds.push( instanceId );\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\toptimize() {\n\n\t\t// track the next indices to copy data to\n\t\tlet nextVertexStart = 0;\n\t\tlet nextIndexStart = 0;\n\n\t\t// Iterate over all geometry ranges in order sorted from earliest in the geometry buffer to latest\n\t\t// in the geometry buffer. Because draw range objects can be reused there is no guarantee of their order.\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst indices = geometryInfoList\n\t\t\t.map( ( e, i ) => i )\n\t\t\t.sort( ( a, b ) => {\n\n\t\t\t\treturn geometryInfoList[ a ].vertexStart - geometryInfoList[ b ].vertexStart;\n\n\t\t\t} );\n\n\t\tconst geometry = this.geometry;\n\t\tfor ( let i = 0, l = geometryInfoList.length; i < l; i ++ ) {\n\n\t\t\t// if a geometry range is inactive then don't copy anything\n\t\t\tconst index = indices[ i ];\n\t\t\tconst geometryInfo = geometryInfoList[ index ];\n\t\t\tif ( geometryInfo.active === false ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// if a geometry contains an index buffer then shift it, as well\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\tif ( geometryInfo.indexStart !== nextIndexStart ) {\n\n\t\t\t\t\tconst { indexStart, vertexStart, reservedIndexCount } = geometryInfo;\n\t\t\t\t\tconst index = geometry.index;\n\t\t\t\t\tconst array = index.array;\n\n\t\t\t\t\t// shift the index pointers based on how the vertex data will shift\n\t\t\t\t\t// adjusting the index must happen first so the original vertex start value is available\n\t\t\t\t\tconst elementDelta = nextVertexStart - vertexStart;\n\t\t\t\t\tfor ( let j = indexStart; j < indexStart + reservedIndexCount; j ++ ) {\n\n\t\t\t\t\t\tarray[ j ] = array[ j ] + elementDelta;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tindex.array.copyWithin( nextIndexStart, indexStart, indexStart + reservedIndexCount );\n\t\t\t\t\tindex.addUpdateRange( nextIndexStart, reservedIndexCount );\n\n\t\t\t\t\tgeometryInfo.indexStart = nextIndexStart;\n\n\t\t\t\t}\n\n\t\t\t\tnextIndexStart += geometryInfo.reservedIndexCount;\n\n\t\t\t}\n\n\t\t\t// if a geometry needs to be moved then copy attribute data to overwrite unused space\n\t\t\tif ( geometryInfo.vertexStart !== nextVertexStart ) {\n\n\t\t\t\tconst { vertexStart, reservedVertexCount } = geometryInfo;\n\t\t\t\tconst attributes = geometry.attributes;\n\t\t\t\tfor ( const key in attributes ) {\n\n\t\t\t\t\tconst attribute = attributes[ key ];\n\t\t\t\t\tconst { array, itemSize } = attribute;\n\t\t\t\t\tarray.copyWithin( nextVertexStart * itemSize, vertexStart * itemSize, ( vertexStart + reservedVertexCount ) * itemSize );\n\t\t\t\t\tattribute.addUpdateRange( nextVertexStart * itemSize, reservedVertexCount * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tgeometryInfo.vertexStart = nextVertexStart;\n\n\t\t\t}\n\n\t\t\tnextVertexStart += geometryInfo.reservedVertexCount;\n\t\t\tgeometryInfo.start = geometry.index ? geometryInfo.indexStart : geometryInfo.vertexStart;\n\n\t\t\t// step the next geometry points to the shifted position\n\t\t\tthis._nextIndexStart = geometry.index ? geometryInfo.indexStart + geometryInfo.reservedIndexCount : 0;\n\t\t\tthis._nextVertexStart = geometryInfo.vertexStart + geometryInfo.reservedVertexCount;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( geometryId, target ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst geometry = this.geometry;\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif ( geometryInfo.boundingBox === null ) {\n\n\t\t\tconst box = new Box3();\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tfor ( let i = geometryInfo.start, l = geometryInfo.start + geometryInfo.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tgeometryInfo.boundingBox = box;\n\n\t\t}\n\n\t\ttarget.copy( geometryInfo.boundingBox );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( geometryId, target ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst geometry = this.geometry;\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif ( geometryInfo.boundingSphere === null ) {\n\n\t\t\tconst sphere = new Sphere();\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = geometryInfo.start, l = geometryInfo.start + geometryInfo.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tgeometryInfo.boundingSphere = sphere;\n\n\t\t}\n\n\t\ttarget.copy( geometryInfo.boundingSphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( instanceId, matrix ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tmatrix.toArray( matricesArray, instanceId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( instanceId, matrix ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\treturn matrix.fromArray( this._matricesTexture.image.data, instanceId * 16 );\n\n\t}\n\n\tsetColorAt( instanceId, color ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tif ( this._colorsTexture === null ) {\n\n\t\t\tthis._initColorsTexture();\n\n\t\t}\n\n\t\tcolor.toArray( this._colorsTexture.image.data, instanceId * 4 );\n\t\tthis._colorsTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( instanceId, color ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\treturn color.fromArray( this._colorsTexture.image.data, instanceId * 4 );\n\n\t}\n\n\tsetVisibleAt( instanceId, value ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tif ( this._instanceInfo[ instanceId ].visible === value ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis._instanceInfo[ instanceId ].visible = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\treturn this._instanceInfo[ instanceId ].visible;\n\n\t}\n\n\tsetGeometryIdAt( instanceId, geometryId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\tthis.validateGeometryId( geometryId );\n\n\t\tthis._instanceInfo[ instanceId ].geometryIndex = geometryId;\n\n\t\treturn this;\n\n\t}\n\n\tgetGeometryIdAt( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\treturn this._instanceInfo[ instanceId ].geometryIndex;\n\n\t}\n\n\tgetGeometryRangeAt( geometryId, target = {} ) {\n\n\t\tthis.validateGeometryId( geometryId );\n\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\ttarget.vertexStart = geometryInfo.vertexStart;\n\t\ttarget.vertexCount = geometryInfo.vertexCount;\n\t\ttarget.reservedVertexCount = geometryInfo.reservedVertexCount;\n\n\t\ttarget.indexStart = geometryInfo.indexStart;\n\t\ttarget.indexCount = geometryInfo.indexCount;\n\t\ttarget.reservedIndexCount = geometryInfo.reservedIndexCount;\n\n\t\ttarget.start = geometryInfo.start;\n\t\ttarget.count = geometryInfo.count;\n\n\t\treturn target;\n\n\t}\n\n\tsetInstanceCount( maxInstanceCount ) {\n\n\t\t// shrink the available instances as much as possible\n\t\tconst availableInstanceIds = this._availableInstanceIds;\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tavailableInstanceIds.sort( ascIdSort );\n\t\twhile ( availableInstanceIds[ availableInstanceIds.length - 1 ] === instanceInfo.length ) {\n\n\t\t\tinstanceInfo.pop();\n\t\t\tavailableInstanceIds.pop();\n\n\t\t}\n\n\t\t// throw an error if it can't be shrunk to the desired size\n\t\tif ( maxInstanceCount < instanceInfo.length ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Instance ids outside the range ${ maxInstanceCount } are being used. Cannot shrink instance count.` );\n\n\t\t}\n\n\t\t// copy the multi draw counts\n\t\tconst multiDrawCounts = new Int32Array( maxInstanceCount );\n\t\tconst multiDrawStarts = new Int32Array( maxInstanceCount );\n\t\tcopyArrayContents( this._multiDrawCounts, multiDrawCounts );\n\t\tcopyArrayContents( this._multiDrawStarts, multiDrawStarts );\n\n\t\tthis._multiDrawCounts = multiDrawCounts;\n\t\tthis._multiDrawStarts = multiDrawStarts;\n\t\tthis._maxInstanceCount = maxInstanceCount;\n\n\t\t// update texture data for instance sampling\n\t\tconst indirectTexture = this._indirectTexture;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst colorsTexture = this._colorsTexture;\n\n\t\tindirectTexture.dispose();\n\t\tthis._initIndirectTexture();\n\t\tcopyArrayContents( indirectTexture.image.data, this._indirectTexture.image.data );\n\n\t\tmatricesTexture.dispose();\n\t\tthis._initMatricesTexture();\n\t\tcopyArrayContents( matricesTexture.image.data, this._matricesTexture.image.data );\n\n\t\tif ( colorsTexture ) {\n\n\t\t\tcolorsTexture.dispose();\n\t\t\tthis._initColorsTexture();\n\t\t\tcopyArrayContents( colorsTexture.image.data, this._colorsTexture.image.data );\n\n\t\t}\n\n\t}\n\n\tsetGeometrySize( maxVertexCount, maxIndexCount ) {\n\n\t\t// Check if we can shrink to the requested vertex attribute size\n\t\tconst validRanges = [ ...this._geometryInfo ].filter( info => info.active );\n\t\tconst requiredVertexLength = Math.max( ...validRanges.map( range => range.vertexStart + range.reservedVertexCount ) );\n\t\tif ( requiredVertexLength > maxVertexCount ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Geometry vertex values are being used outside the range ${ maxIndexCount }. Cannot shrink further.` );\n\n\t\t}\n\n\t\t// Check if we can shrink to the requested index attribute size\n\t\tif ( this.geometry.index ) {\n\n\t\t\tconst requiredIndexLength = Math.max( ...validRanges.map( range => range.indexStart + range.reservedIndexCount ) );\n\t\t\tif ( requiredIndexLength > maxIndexCount ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Geometry index values are being used outside the range ${ maxIndexCount }. Cannot shrink further.` );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\t// dispose of the previous geometry\n\t\tconst oldGeometry = this.geometry;\n\t\toldGeometry.dispose();\n\n\t\t// recreate the geometry needed based on the previous variant\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tif ( this._geometryInitialized ) {\n\n\t\t\tthis._geometryInitialized = false;\n\t\t\tthis.geometry = new BufferGeometry();\n\t\t\tthis._initializeGeometry( oldGeometry );\n\n\t\t}\n\n\t\t// copy data from the previous geometry\n\t\tconst geometry = this.geometry;\n\t\tif ( oldGeometry.index ) {\n\n\t\t\tcopyArrayContents( oldGeometry.index.array, geometry.index.array );\n\n\t\t}\n\n\t\tfor ( const key in oldGeometry.attributes ) {\n\n\t\t\tcopyArrayContents( oldGeometry.attributes[ key ].array, geometry.attributes[ key ].array );\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( ! instanceInfo[ i ].visible || ! instanceInfo[ i ].active ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t_mesh.geometry.setDrawRange( geometryInfo.start, geometryInfo.count );\n\n\t\t\t// get the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( geometryId, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( geometryId, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._geometryInfo = source._geometryInfo.map( info => ( {\n\t\t\t...info,\n\n\t\t\tboundingBox: info.boundingBox !== null ? info.boundingBox.clone() : null,\n\t\t\tboundingSphere: info.boundingSphere !== null ? info.boundingSphere.clone() : null,\n\t\t} ) );\n\t\tthis._instanceInfo = source._instanceInfo.map( info => ( { ...info } ) );\n\n\t\tthis._maxInstanceCount = source._maxInstanceCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.data.slice();\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture = source._colorsTexture.clone();\n\t\t\tthis._colorsTexture.image.data = this._colorsTexture.image.data.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\n\t\tthis._indirectTexture.dispose();\n\t\tthis._indirectTexture = null;\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture.dispose();\n\t\t\tthis._colorsTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\tconst indirectTexture = this._indirectTexture;\n\t\tconst indirectArray = indirectTexture.image.data;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_matrix$1\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_matrix$1,\n\t\t\t\trenderer.coordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet multiDrawCount = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_matrix$1.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _matrix$1 );\n\t\t\t_forward.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld ).transformDirection( _matrix$1 );\n\n\t\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\t\tif ( instanceInfo[ i ].visible && instanceInfo[ i ].active ) {\n\n\t\t\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t\t\t\tconst z = _temp.subVectors( _sphere$2.center, _vector$5 ).dot( _forward );\n\t\t\t\t\t\t_renderList.push( geometryInfo.start, geometryInfo.count, z, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ multiDrawCount ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ multiDrawCount ] = item.count;\n\t\t\t\tindirectArray[ multiDrawCount ] = item.index;\n\t\t\t\tmultiDrawCount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\t\tif ( instanceInfo[ i ].visible && instanceInfo[ i ].active ) {\n\n\t\t\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t\t\t\tmultiDrawStarts[ multiDrawCount ] = geometryInfo.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ multiDrawCount ] = geometryInfo.count;\n\t\t\t\t\t\tindirectArray[ multiDrawCount ] = i;\n\t\t\t\t\t\tmultiDrawCount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tindirectTexture.needsUpdate = true;\n\t\tthis._multiDrawCount = multiDrawCount;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vStart = /*@__PURE__*/ new Vector3();\nconst _vEnd = /*@__PURE__*/ new Vector3();\n\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nconst _intersectPointOnRay = /*@__PURE__*/ new Vector3();\nconst _intersectPointOnSegment = /*@__PURE__*/ new Vector3();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_vStart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_vEnd.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _vStart.distanceTo( _vEnd );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst a = index.getX( end - 1 );\n\t\t\t\tconst b = index.getX( start );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, i, i + 1 );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, end - 1, start );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, raycaster, ray, thresholdSq, a, b ) {\n\n\tconst positionAttribute = object.geometry.attributes.position;\n\n\t_vStart.fromBufferAttribute( positionAttribute, a );\n\t_vEnd.fromBufferAttribute( positionAttribute, b );\n\n\tconst distSq = ray.distanceSqToSegment( _vStart, _vEnd, _intersectPointOnRay, _intersectPointOnSegment );\n\n\tif ( distSq > thresholdSq ) return;\n\n\t_intersectPointOnRay.applyMatrix4( object.matrixWorld ); // Move back to world space for distance calculation\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectPointOnRay );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\treturn {\n\n\t\tdistance: distance,\n\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t// point: raycaster.ray.at( distance ),\n\t\tpoint: _intersectPointOnSegment.clone().applyMatrix4( object.matrixWorld ),\n\t\tindex: a,\n\t\tface: null,\n\t\tfaceIndex: null,\n\t\tbarycoord: null,\n\t\tobject: object\n\n\t};\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tfaceIndex: null,\n\t\t\tbarycoord: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format = DepthFormat ) {\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tif ( radiusTop > 0 || y !== 0 ) {\n\n\t\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\t\tgroupCount += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( radiusBottom > 0 || y !== heightSegments - 1 ) {\n\n\t\t\t\t\t\tindices.push( b, c, d );\n\t\t\t\t\t\tgroupCount += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // doesn't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._dispersion = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget dispersion() {\n\n\t\treturn this._dispersion;\n\n\t}\n\n\tset dispersion( value ) {\n\n\t\tif ( this._dispersion > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._dispersion = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.dispersion = source.dispersion;\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\n// DefaultInterpolation is inherited;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name = '', duration = - 1, tracks = [], blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'X-File-Size' ) || response.headers.get( 'Content-Length' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}, ( e ) => {\n\n\t\t\t\t\t\t\t\t\tcontroller.error( e );\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\t\tif ( this.target !== undefined ) data.object.target = this.target.uuid;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.intensity = 1;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.intensity = source.intensity;\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.intensity !== 1 ) object.intensity = this.intensity;\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = this.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.dispersion !== undefined ) material.dispersion = json.dispersion;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapRotation !== undefined ) material.envMapRotation.fromArray( json.envMapRotation );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tcreateMaterialFromType( type ) {\n\n\t\treturn MaterialLoader.createMaterialFromType( type );\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) { // @deprecated, r165\n\n\t\tconsole.warn( 'THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead.' );\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\t\t\t\tif ( data.backgroundRotation !== undefined ) object.backgroundRotation.fromArray( data.backgroundRotation );\n\n\t\t\t\tif ( data.environmentIntensity !== undefined ) object.environmentIntensity = data.environmentIntensity;\n\t\t\t\tif ( data.environmentRotation !== undefined ) object.environmentRotation.fromArray( data.environmentRotation );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxInstanceCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxInstanceCount = data.maxInstanceCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\t\t\t\tif ( data.colorsTexture !== undefined ) object._colorsTexture = getTexture( data.colorsTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.intensity !== undefined ) object.shadow.intensity = data.shadow.intensity;\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tbindLightTargets( object ) {\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isDirectionalLight || child.isSpotLight ) {\n\n\t\t\t\tconst uuid = child.target;\n\n\t\t\t\tconst target = object.getObjectByProperty( 'uuid', uuid );\n\n\t\t\t\tif ( target !== undefined ) {\n\n\t\t\t\t\tchild.target = target;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.target = new Object3D();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\t// If cached is a promise, wait for it to resolve\n\t\t\tif ( cached.then ) {\n\n\t\t\t\tcached.then( imageBitmap => {\n\n\t\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} ).catch( e => {\n\n\t\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\t} );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// If cached is not a promise (i.e., it's already an imageBitmap)\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tconst promise = fetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t\treturn imageBitmap;\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tCache.remove( url );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tCache.add( url, promise );\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn performance.now();\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop( delay = 0 ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop( this.context.currentTime + delay );\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.isPlaying === true && this.source.detune !== undefined ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\t\tthis._progress = 0;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.sourceType !== 'buffer' ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio source type cannot be copied.' );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.autoplay = source.autoplay;\n\n\t\tthis.buffer = source.buffer;\n\t\tthis.detune = source.detune;\n\t\tthis.loop = source.loop;\n\t\tthis.loopStart = source.loopStart;\n\t\tthis.loopEnd = source.loopEnd;\n\t\tthis.offset = source.offset;\n\t\tthis.duration = source.duration;\n\t\tthis.playbackRate = source.playbackRate;\n\t\tthis.hasPlaybackControl = source.hasPlaybackControl;\n\t\tthis.sourceType = source.sourceType;\n\n\t\tthis.filters = source.filters.slice();\n\n\t\treturn this;\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor( this.listener ).copy( this, recursive );\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.isMaterial === true ) {\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.isObject3D === true ) {\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass RenderTarget3D extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isRenderTarget3D = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass RenderTargetArray extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isRenderTargetArray = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tconst uniforms = Array.isArray( uniformsSource[ i ] ) ? uniformsSource[ i ] : [ uniformsSource[ i ] ];\n\n\t\t\tfor ( let j = 0; j < uniforms.length; j ++ ) {\n\n\t\t\t\tthis.uniforms.push( uniforms[ j ].clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tsetFromXRController( controller ) {\n\n\t\t_matrix.identity().extractRotation( controller.matrixWorld );\n\n\t\tthis.ray.origin.setFromMatrixPosition( controller.matrixWorld );\n\t\tthis.ray.direction.set( 0, 0, - 1 ).applyMatrix4( _matrix );\n\n\t\treturn this;\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersect( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersect( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersect( object, raycaster, intersects, recursive ) {\n\n\tlet propagate = true;\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tconst result = object.raycast( raycaster, intersects );\n\n\t\tif ( result === false ) propagate = false;\n\n\t}\n\n\tif ( propagate === true && recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersect( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * phi (the polar angle) is measured from the positive y-axis. The positive y-axis is up.\n * theta (the azimuthal angle) is measured from the positive z-axis.\n */\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = clamp( this.phi, EPS, Math.PI - EPS );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix2 {\n\n\tconstructor( n11, n12, n21, n22 ) {\n\n\t\tMatrix2.prototype.isMatrix2 = true;\n\n\t\tthis.elements = [\n\t\t\t1, 0,\n\t\t\t0, 1,\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n21, n22 );\n\n\t\t}\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\t\t\t1, 0,\n\t\t\t0, 1,\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( n11, n12, n21, n22 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 2 ] = n12;\n\t\tte[ 1 ] = n21; te[ 3 ] = n22;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x >= this.min.x && point.x <= this.max.x &&\n\t\t\tpoint.y >= this.min.y && point.y <= this.max.y;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x >= this.min.x && box.min.x <= this.max.x &&\n\t\t\tbox.max.y >= this.min.y && box.min.y <= this.max.y;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t// update the local matrix based on the parent and light target transforms\n\t\tif ( this.parent ) {\n\n\t\t\tthis.parent.updateWorldMatrix( true );\n\n\t\t\tthis.matrix\n\t\t\t\t.copy( this.parent.matrixWorld )\n\t\t\t\t.invert()\n\t\t\t\t.multiply( this.light.matrixWorld );\n\n\t\t} else {\n\n\t\t\tthis.matrix.copy( this.light.matrixWorld );\n\n\t\t}\n\n\t\tthis.matrixWorld.copy( this.light.matrixWorld );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// Adjust z values based on coordinate system\n\t\tconst nearZ = this.camera.coordinateSystem === WebGLCoordinateSystem ? - 1 : 0;\n\n\t\t// center / target\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, nearZ );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, nearZ );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, nearZ );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, nearZ );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, nearZ );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, nearZ );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, nearZ );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, nearZ );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, nearZ );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, nearZ );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, nearZ );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, nearZ );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nclass Controls extends EventDispatcher {\n\n\tconstructor( object, domElement = null ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\n\t\tthis.enabled = true;\n\n\t\tthis.state = - 1;\n\n\t\tthis.keys = {};\n\t\tthis.mouseButtons = { LEFT: null, MIDDLE: null, RIGHT: null };\n\t\tthis.touches = { ONE: null, TWO: null };\n\n\t}\n\n\tconnect() {}\n\n\tdisconnect() {}\n\n\tdispose() {}\n\n\tupdate( /* delta */ ) {}\n\n}\n\nfunction contain( texture, aspect ) {\n\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\n\n\tif ( imageAspect > aspect ) {\n\n\t\ttexture.repeat.x = 1;\n\t\ttexture.repeat.y = imageAspect / aspect;\n\n\t\ttexture.offset.x = 0;\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\n\n\t} else {\n\n\t\ttexture.repeat.x = aspect / imageAspect;\n\t\ttexture.repeat.y = 1;\n\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\n\t\ttexture.offset.y = 0;\n\n\t}\n\n\treturn texture;\n\n}\n\nfunction cover( texture, aspect ) {\n\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\n\n\tif ( imageAspect > aspect ) {\n\n\t\ttexture.repeat.x = aspect / imageAspect;\n\t\ttexture.repeat.y = 1;\n\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\n\t\ttexture.offset.y = 0;\n\n\t} else {\n\n\t\ttexture.repeat.x = 1;\n\t\ttexture.repeat.y = imageAspect / aspect;\n\n\t\ttexture.offset.x = 0;\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\n\n\t}\n\n\treturn texture;\n\n}\n\nfunction fill( texture ) {\n\n\ttexture.repeat.x = 1;\n\ttexture.repeat.y = 1;\n\n\ttexture.offset.x = 0;\n\ttexture.offset.y = 0;\n\n\treturn texture;\n\n}\n\n\n\n/**\n * Given the width, height, format, and type of a texture. Determines how many\n * bytes must be used to represent the texture.\n *\n * @param {Number} width\n * @param {Number} height\n * @param {Number} format\n * @param {Number} type\n * @return {Number} The number of bytes required to represent the texture.\n */\nfunction getByteLength( width, height, format, type ) {\n\n\tconst typeByteLength = getTextureTypeByteLength( type );\n\n\tswitch ( format ) {\n\n\t\t// https://registry.khronos.org/OpenGL-Refpages/es3.0/html/glTexImage2D.xhtml\n\t\tcase AlphaFormat:\n\t\t\treturn width * height;\n\t\tcase LuminanceFormat:\n\t\t\treturn width * height;\n\t\tcase LuminanceAlphaFormat:\n\t\t\treturn width * height * 2;\n\t\tcase RedFormat:\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RedIntegerFormat:\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGFormat:\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGIntegerFormat:\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBFormat:\n\t\t\treturn ( ( width * height * 3 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBAFormat:\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBAIntegerFormat:\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_s3tc_srgb/\n\t\tcase RGB_S3TC_DXT1_Format:\n\t\tcase RGBA_S3TC_DXT1_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\n\t\tcase RGBA_S3TC_DXT3_Format:\n\t\tcase RGBA_S3TC_DXT5_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_pvrtc/\n\t\tcase RGB_PVRTC_2BPPV1_Format:\n\t\tcase RGBA_PVRTC_2BPPV1_Format:\n\t\t\treturn ( Math.max( width, 16 ) * Math.max( height, 8 ) ) / 4;\n\t\tcase RGB_PVRTC_4BPPV1_Format:\n\t\tcase RGBA_PVRTC_4BPPV1_Format:\n\t\t\treturn ( Math.max( width, 8 ) * Math.max( height, 8 ) ) / 2;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_etc/\n\t\tcase RGB_ETC1_Format:\n\t\tcase RGB_ETC2_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\n\t\tcase RGBA_ETC2_EAC_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\n\t\tcase RGBA_ASTC_4x4_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\t\tcase RGBA_ASTC_5x4_Format:\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\t\tcase RGBA_ASTC_5x5_Format:\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_6x5_Format:\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_6x6_Format:\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_8x5_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_8x6_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_8x8_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\n\t\tcase RGBA_ASTC_10x5_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_10x6_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_10x8_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\n\t\tcase RGBA_ASTC_10x10_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\n\t\tcase RGBA_ASTC_12x10_Format:\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\n\t\tcase RGBA_ASTC_12x12_Format:\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 11 ) / 12 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_bptc/\n\t\tcase RGBA_BPTC_Format:\n\t\tcase RGB_BPTC_SIGNED_Format:\n\t\tcase RGB_BPTC_UNSIGNED_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_rgtc/\n\t\tcase RED_RGTC1_Format:\n\t\tcase SIGNED_RED_RGTC1_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 8;\n\t\tcase RED_GREEN_RGTC2_Format:\n\t\tcase SIGNED_RED_GREEN_RGTC2_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\n\n\t}\n\n\tthrow new Error(\n\t\t`Unable to determine texture byte length for ${format} format.`,\n\t);\n\n}\n\nfunction getTextureTypeByteLength( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase UnsignedByteType:\n\t\tcase ByteType:\n\t\t\treturn { byteLength: 1, components: 1 };\n\t\tcase UnsignedShortType:\n\t\tcase ShortType:\n\t\tcase HalfFloatType:\n\t\t\treturn { byteLength: 2, components: 1 };\n\t\tcase UnsignedShort4444Type:\n\t\tcase UnsignedShort5551Type:\n\t\t\treturn { byteLength: 2, components: 4 };\n\t\tcase UnsignedIntType:\n\t\tcase IntType:\n\t\tcase FloatType:\n\t\t\treturn { byteLength: 4, components: 1 };\n\t\tcase UnsignedInt5999Type:\n\t\t\treturn { byteLength: 4, components: 3 };\n\n\t}\n\n\tthrow new Error( `Unknown texture type ${type}.` );\n\n}\n\nconst TextureUtils = {\n\tcontain,\n\tcover,\n\tfill,\n\tgetByteLength\n};\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, Controls, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix2, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeutralToneMapping, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RAD2DEG, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBDepthPacking, RGBFormat, RGBIntegerFormat, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGDepthPacking, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RenderTarget3D, RenderTargetArray, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TextureUtils, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedInt5999Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLRenderTarget, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, arrayNeedsUint32, cloneUniforms, createCanvasElement, createElementNS, getByteLength, getUnlitUniformColorSpace, mergeUniforms, probeAsync, toNormalizedProjectionMatrix, toReversedProjectionMatrix, warnOnce };\n","/**\n * @license\n * Copyright 2010-2024 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nimport { Color, Matrix3, Vector2, mergeUniforms, Vector3, CubeUVReflectionMapping, Mesh, BoxGeometry, ShaderMaterial, cloneUniforms, BackSide, ColorManagement, SRGBTransfer, PlaneGeometry, FrontSide, getUnlitUniformColorSpace, Euler, Matrix4, IntType, RGBAFormat, HalfFloatType, UnsignedByteType, FloatType, Plane, EquirectangularReflectionMapping, EquirectangularRefractionMapping, WebGLCubeRenderTarget, CubeReflectionMapping, CubeRefractionMapping, PerspectiveCamera, NoToneMapping, MeshBasicMaterial, BufferGeometry, BufferAttribute, WebGLRenderTarget, NoBlending, OrthographicCamera, LinearFilter, LinearSRGBColorSpace, warnOnce, arrayNeedsUint32, Uint32BufferAttribute, Uint16BufferAttribute, Vector4, DataArrayTexture, LessEqualCompare, Texture, DepthTexture, Data3DTexture, CubeTexture, GLSL3, CustomToneMapping, NeutralToneMapping, AgXToneMapping, ACESFilmicToneMapping, CineonToneMapping, ReinhardToneMapping, LinearToneMapping, PCFShadowMap, PCFSoftShadowMap, VSMShadowMap, LinearTransfer, AddOperation, MixOperation, MultiplyOperation, ObjectSpaceNormalMap, TangentSpaceNormalMap, NormalBlending, DoubleSide, UniformsUtils, Layers, Frustum, MeshDepthMaterial, RGBADepthPacking, MeshDistanceMaterial, NearestFilter, LessEqualDepth, AddEquation, SubtractEquation, ReverseSubtractEquation, ZeroFactor, OneFactor, SrcColorFactor, SrcAlphaFactor, SrcAlphaSaturateFactor, DstColorFactor, DstAlphaFactor, OneMinusSrcColorFactor, OneMinusSrcAlphaFactor, OneMinusDstColorFactor, OneMinusDstAlphaFactor, ConstantColorFactor, OneMinusConstantColorFactor, ConstantAlphaFactor, OneMinusConstantAlphaFactor, CustomBlending, MultiplyBlending, SubtractiveBlending, AdditiveBlending, CullFaceNone, CullFaceBack, CullFaceFront, NotEqualDepth, GreaterDepth, GreaterEqualDepth, EqualDepth, LessDepth, AlwaysDepth, NeverDepth, MinEquation, MaxEquation, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestMipmapNearestFilter, NearestMipmapLinearFilter, LinearMipmapNearestFilter, LinearMipmapLinearFilter, NeverCompare, AlwaysCompare, LessCompare, EqualCompare, GreaterEqualCompare, GreaterCompare, NotEqualCompare, NoColorSpace, DepthStencilFormat, getByteLength, UnsignedIntType, UnsignedInt248Type, UnsignedShortType, DepthFormat, createElementNS, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedInt5999Type, ByteType, ShortType, AlphaFormat, RGBFormat, LuminanceFormat, LuminanceAlphaFormat, RedFormat, RedIntegerFormat, RGFormat, RGIntegerFormat, RGBAIntegerFormat, RGB_S3TC_DXT1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_PVRTC_2BPPV1_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGBA_ETC2_EAC_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_BPTC_Format, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RED_RGTC1_Format, SIGNED_RED_RGTC1_Format, RED_GREEN_RGTC2_Format, SIGNED_RED_GREEN_RGTC2_Format, Group, EventDispatcher, ArrayCamera, RAD2DEG, createCanvasElement, SRGBColorSpace, REVISION, toNormalizedProjectionMatrix, toReversedProjectionMatrix, probeAsync, WebGLCoordinateSystem } from './three.core.js';\nexport { AdditiveAnimationBlendMode, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxHelper, BufferGeometryLoader, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CircleGeometry, Clock, ColorKeyframeTrack, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, Controls, CubeCamera, CubeTextureLoader, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceFrontBack, Curve, CurvePath, CylinderGeometry, Cylindrical, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualStencilFunc, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Fog, FogExp2, FramebufferTexture, GLBufferAttribute, GLSL1, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, MOUSE, Material, MaterialLoader, MathUtils, Matrix2, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NeverStencilFunc, NormalAnimationBlendMode, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, OctahedronGeometry, Path, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RGBDepthPacking, RGBIntegerFormat, RGDepthPacking, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RenderTarget, RenderTarget3D, RenderTargetArray, ReplaceStencilOp, RingGeometry, Scene, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, TOUCH, TetrahedronGeometry, TextureLoader, TextureUtils, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, VectorKeyframeTrack, VideoTexture, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroSlopeEnding, ZeroStencilOp } from './three.core.js';\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl ) {\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\t\tconst size = array.byteLength;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version,\n\t\t\tsize: size\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRanges = attribute.updateRanges;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRanges.length === 0 ) {\n\n\t\t\t// Not using update ranges\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\t// Before applying update ranges, we merge any adjacent / overlapping\n\t\t\t// ranges to reduce load on `gl.bufferSubData`. Empirically, this has led\n\t\t\t// to performance improvements for applications which make heavy use of\n\t\t\t// update ranges. Likely due to GPU command overhead.\n\t\t\t//\n\t\t\t// Note that to reduce garbage collection between frames, we merge the\n\t\t\t// update ranges in-place. This is safe because this method will clear the\n\t\t\t// update ranges once updated.\n\n\t\t\tupdateRanges.sort( ( a, b ) => a.start - b.start );\n\n\t\t\t// To merge the update ranges in-place, we work from left to right in the\n\t\t\t// existing updateRanges array, merging ranges. This may result in a final\n\t\t\t// array which is smaller than the original. This index tracks the last\n\t\t\t// index representing a merged range, any data after this index can be\n\t\t\t// trimmed once the merge algorithm is completed.\n\t\t\tlet mergeIndex = 0;\n\n\t\t\tfor ( let i = 1; i < updateRanges.length; i ++ ) {\n\n\t\t\t\tconst previousRange = updateRanges[ mergeIndex ];\n\t\t\t\tconst range = updateRanges[ i ];\n\n\t\t\t\t// We add one here to merge adjacent ranges. This is safe because ranges\n\t\t\t\t// operate over positive integers.\n\t\t\t\tif ( range.start <= previousRange.start + previousRange.count + 1 ) {\n\n\t\t\t\t\tpreviousRange.count = Math.max(\n\t\t\t\t\t\tpreviousRange.count,\n\t\t\t\t\t\trange.start + range.count - previousRange.start\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\t++ mergeIndex;\n\t\t\t\t\tupdateRanges[ mergeIndex ] = range;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Trim the array to only contain the merged ranges.\n\t\t\tupdateRanges.length = mergeIndex + 1;\n\n\t\t\tfor ( let i = 0, l = updateRanges.length; i < l; i ++ ) {\n\n\t\t\t\tconst range = updateRanges[ i ];\n\n\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, range.start, range.count );\n\n\t\t\t}\n\n\t\t\tattribute.clearUpdateRanges();\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tif ( data.size !== attribute.array.byteLength ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: The size of the buffer attribute\\'s array buffer does not match the original size. Resizing buffer attributes is not supported.' );\n\n\t\t\t}\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\\n\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n\\t#endif\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_CLEARCOAT ) \\n\\t\\tclearcoatSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_SHEEN ) \\n\\t\\tsheenSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar batching_pars_vertex = \"#ifdef USE_BATCHING\\n\\t#if ! defined( GL_ANGLE_multi_draw )\\n\\t#define gl_DrawID _gl_DrawID\\n\\tuniform int _gl_DrawID;\\n\\t#endif\\n\\tuniform highp sampler2D batchingTexture;\\n\\tuniform highp usampler2D batchingIdTexture;\\n\\tmat4 getBatchingMatrix( const in float i ) {\\n\\t\\tint size = textureSize( batchingTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n\\tfloat getIndirectIndex( const in int i ) {\\n\\t\\tint size = textureSize( batchingIdTexture, 0 ).x;\\n\\t\\tint x = i % size;\\n\\t\\tint y = i / size;\\n\\t\\treturn float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\\n\\t}\\n#endif\\n#ifdef USE_BATCHING_COLOR\\n\\tuniform sampler2D batchingColorTexture;\\n\\tvec3 getBatchingColor( const in float i ) {\\n\\t\\tint size = textureSize( batchingColorTexture, 0 ).x;\\n\\t\\tint j = int( i );\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\\n\\t}\\n#endif\";\n\nvar batching_vertex = \"#ifdef USE_BATCHING\\n\\tmat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\\n\\t\\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\t\\tfloat distanceToPlane, distanceGradient;\\n\\t\\tfloat clipOpacity = 1.0;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\tif ( clipOpacity == 0.0 ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tfloat unionClipOpacity = 1.0;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\t\\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tclipOpacity *= 1.0 - unionClipOpacity;\\n\\t\\t#endif\\n\\t\\tdiffuseColor.a *= clipOpacity;\\n\\t\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tbool clipped = true;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tif ( clipped ) discard;\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\\n#ifdef USE_BATCHING_COLOR\\n\\tvec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\\n\\tvColor.xyz *= batchingColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = objectTangent;\\n#endif\\n#ifdef USE_BATCHING\\n\\tmat3 bm = mat3( batchingMatrix );\\n\\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\\n\\ttransformedNormal = bm * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = bm * transformedTangent;\\n\\t#endif\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmat3 im = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\\n\\ttransformedNormal = im * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = im * transformedTangent;\\n\\t#endif\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE\\n\\t\\temissiveColor = sRGBTransferEOTF( emissiveColor );\\n\\t#endif\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"vec4 LinearTransferOETF( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 sRGBTransferEOTF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform mat3 envMapRotation;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_DISPERSION\\n\\tmaterial.dispersion = dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tif( material.anisotropy == 0.0 ) {\\n\\t\\tanisotropyV = vec2( 1.0, 0.0 );\\n\\t} else {\\n\\t\\tanisotropyV /= material.anisotropy;\\n\\t\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\t}\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\tfloat dispersion;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\\nvec3 sheenSpecularDirect = vec3( 0.0 );\\nvec3 sheenSpecularIndirect = vec3(0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometryNormal;\\n\\t\\tvec3 viewDir = geometryViewDir;\\n\\t\\tvec3 position = geometryPosition;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal = vec3( 0.0 );\\n#ifdef USE_CLEARCOAT\\n\\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if defined( USE_LIGHT_PROBES )\\n\\t\\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvFragDepth = 1.0 + gl_Position.w;\\n\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphinstance_vertex = \"#ifdef USE_INSTANCING_MORPH\\n\\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\\n\\t}\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t}\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_INSTANCING_MORPH\\n\\t\\tuniform float morphTargetBaseInfluence;\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t#endif\\n\\tuniform sampler2DArray morphTargetsTexture;\\n\\tuniform ivec2 morphTargetsTextureSize;\\n\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t}\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t}\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;\\nconst float Inv255 = 1. / 255.;\\nconst vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );\\nconst vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );\\nconst vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );\\nconst vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tif( v <= 0.0 )\\n\\t\\treturn vec4( 0., 0., 0., 0. );\\n\\tif( v >= 1.0 )\\n\\t\\treturn vec4( 1., 1., 1., 1. );\\n\\tfloat vuf;\\n\\tfloat af = modf( v * PackFactors.a, vuf );\\n\\tfloat bf = modf( vuf * ShiftRight8, vuf );\\n\\tfloat gf = modf( vuf * ShiftRight8, vuf );\\n\\treturn vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );\\n}\\nvec3 packDepthToRGB( const in float v ) {\\n\\tif( v <= 0.0 )\\n\\t\\treturn vec3( 0., 0., 0. );\\n\\tif( v >= 1.0 )\\n\\t\\treturn vec3( 1., 1., 1. );\\n\\tfloat vuf;\\n\\tfloat bf = modf( v * PackFactors.b, vuf );\\n\\tfloat gf = modf( vuf * ShiftRight8, vuf );\\n\\treturn vec3( vuf * Inv255, gf * PackUpscale, bf );\\n}\\nvec2 packDepthToRG( const in float v ) {\\n\\tif( v <= 0.0 )\\n\\t\\treturn vec2( 0., 0. );\\n\\tif( v >= 1.0 )\\n\\t\\treturn vec2( 1., 1. );\\n\\tfloat vuf;\\n\\tfloat gf = modf( v * 256., vuf );\\n\\treturn vec2( vuf * Inv255, gf );\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors4 );\\n}\\nfloat unpackRGBToDepth( const in vec3 v ) {\\n\\treturn dot( v, UnpackFactors3 );\\n}\\nfloat unpackRGToDepth( const in vec2 v ) {\\n\\treturn v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;\\n}\\nvec4 pack2HalfToRGBA( const in vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( const in vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_BATCHING\\n\\tmvPosition = batchingMatrix * mvPosition;\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn mix( 1.0, shadow, shadowIntensity );\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\t\\n\\t\\tfloat lightToPositionLength = length( lightToPosition );\\n\\t\\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\\n\\t\\t\\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\t\\tdp += shadowBias;\\n\\t\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\t\\tshadow = (\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn mix( 1.0, shadow, shadowIntensity );\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tint size = textureSize( boneTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 CineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.6605, - 0.1246, - 0.0182 ),\\n\\tvec3( - 0.5876, 1.1329, - 0.1006 ),\\n\\tvec3( - 0.0728, - 0.0083, 1.1187 )\\n);\\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\\n\\tvec3( 0.6274, 0.0691, 0.0164 ),\\n\\tvec3( 0.3293, 0.9195, 0.0880 ),\\n\\tvec3( 0.0433, 0.0113, 0.8956 )\\n);\\nvec3 agxDefaultContrastApprox( vec3 x ) {\\n\\tvec3 x2 = x * x;\\n\\tvec3 x4 = x2 * x2;\\n\\treturn + 15.5 * x4 * x2\\n\\t\\t- 40.14 * x4 * x\\n\\t\\t+ 31.96 * x4\\n\\t\\t- 6.868 * x2 * x\\n\\t\\t+ 0.4298 * x2\\n\\t\\t+ 0.1191 * x\\n\\t\\t- 0.00232;\\n}\\nvec3 AgXToneMapping( vec3 color ) {\\n\\tconst mat3 AgXInsetMatrix = mat3(\\n\\t\\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\\n\\t\\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\\n\\t\\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\\n\\t);\\n\\tconst mat3 AgXOutsetMatrix = mat3(\\n\\t\\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\\n\\t\\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\\n\\t\\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\\n\\t);\\n\\tconst float AgxMinEv = - 12.47393;\\tconst float AgxMaxEv = 4.026069;\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\\n\\tcolor = AgXInsetMatrix * color;\\n\\tcolor = max( color, 1e-10 );\\tcolor = log2( color );\\n\\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\tcolor = agxDefaultContrastApprox( color );\\n\\tcolor = AgXOutsetMatrix * color;\\n\\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\\n\\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\treturn color;\\n}\\nvec3 NeutralToneMapping( vec3 color ) {\\n\\tconst float StartCompression = 0.8 - 0.04;\\n\\tconst float Desaturation = 0.15;\\n\\tcolor *= toneMappingExposure;\\n\\tfloat x = min( color.r, min( color.g, color.b ) );\\n\\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\\n\\tcolor -= offset;\\n\\tfloat peak = max( color.r, max( color.g, color.b ) );\\n\\tif ( peak < StartCompression ) return color;\\n\\tfloat d = 1. - StartCompression;\\n\\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\\n\\tcolor *= newPeak / peak;\\n\\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\\n\\treturn mix( color, vec3( newPeak ), g );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec4 transmittedLight;\\n\\t\\tvec3 transmittance;\\n\\t\\t#ifdef USE_DISPERSION\\n\\t\\t\\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\\n\\t\\t\\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\\n\\t\\t\\tfor ( int i = 0; i < 3; i ++ ) {\\n\\t\\t\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\\n\\t\\t\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\t\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\t\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\t\\t\\trefractionCoords += 1.0;\\n\\t\\t\\t\\trefractionCoords /= 2.0;\\n\\t\\t\\t\\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\\n\\t\\t\\t\\ttransmittedLight[ i ] = transmissionSample[ i ];\\n\\t\\t\\t\\ttransmittedLight.a += transmissionSample.a;\\n\\t\\t\\t\\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\\n\\t\\t\\t}\\n\\t\\t\\ttransmittedLight.a /= 3.0;\\n\\t\\t#else\\n\\t\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\t\\trefractionCoords += 1.0;\\n\\t\\t\\trefractionCoords /= 2.0;\\n\\t\\t\\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\t\\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\t#endif\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_BATCHING\\n\\t\\tworldPosition = batchingMatrix * worldPosition;\\n\\t#endif\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nuniform mat3 backgroundRotation;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#elif DEPTH_PACKING == 3202\\n\\t\\tgl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );\\n\\t#elif DEPTH_PACKING == 3203\\n\\t\\tgl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_DISPERSION\\n\\tuniform float dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix[ 3 ];\\n\\tvec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbatching_pars_vertex: batching_pars_vertex,\n\tbatching_vertex: batching_vertex,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphinstance_vertex: morphinstance_vertex,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tenvMapRotation: { value: /*@__PURE__*/ new Matrix3() },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowIntensity: 1,\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowIntensity: 1,\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowIntensity: 1,\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 },\n\t\t\tbackgroundRotation: { value: /*@__PURE__*/ new Matrix3() }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tdispersion: { value: 0 },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\nconst _e1$1 = /*@__PURE__*/ new Euler();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction getBackground( scene ) {\n\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\treturn background;\n\n\t}\n\n\tfunction render( scene ) {\n\n\t\tlet forceClear = false;\n\t\tconst background = getBackground( scene );\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\n\n\t\tif ( environmentBlendMode === 'additive' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\t// buffers might not be writable which is required to ensure a correct clear\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t}\n\n\tfunction addToRenderList( renderList, scene ) {\n\n\t\tconst background = getBackground( scene );\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\t_e1$1.copy( scene.backgroundRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1$1.x *= - 1; _e1$1.y *= - 1; _e1$1.z *= - 1;\n\n\t\t\tif ( background.isCubeTexture && background.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1$1.y *= - 1;\n\t\t\t\t_e1$1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.uniforms.backgroundRotation.value.setFromMatrix4( _m1$1.makeRotationFromEuler( _e1$1 ) );\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\tfunction dispose() {\n\n\t\tif ( boxMesh !== undefined ) {\n\n\t\t\tboxMesh.geometry.dispose();\n\t\t\tboxMesh.material.dispose();\n\n\t\t}\n\n\t\tif ( planeMesh !== undefined ) {\n\n\t\t\tplaneMesh.geometry.dispose();\n\t\t\tplaneMesh.material.dispose();\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render,\n\t\taddToRenderList: addToRenderList,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, attributes ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tconst state = getBindingState( geometry, program, material );\n\n\t\tif ( currentState !== state ) {\n\n\t\t\tcurrentState = state;\n\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t}\n\n\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\treturn gl.createVertexArray();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\treturn gl.bindVertexArray( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\treturn gl.deleteVertexArray( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tgl.vertexAttribDivisor( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes\n\n\t\t\t\t\tconst integer = ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info ) {\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tgl.drawArraysInstanced( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\textension.multiDrawArraysWEBGL( mode, starts, 0, counts, 0, drawCount );\n\n\t\tlet elementCount = 0;\n\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\telementCount += counts[ i ];\n\n\t\t}\n\n\t\tinfo.update( elementCount, mode, 1 );\n\n\t}\n\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\n\n\t\t\t\trenderInstances( starts[ i ], counts[ i ], primcount[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawArraysInstancedWEBGL( mode, starts, 0, counts, 0, primcount, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ] * primcount[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters, utils ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction textureFormatReadable( textureFormat ) {\n\n\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction textureTypeReadable( textureType ) {\n\n\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) );\n\n\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\ttextureType !== FloatType && ! halfFloatSupportedByExt ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\tconst reverseDepthBuffer = parameters.reverseDepthBuffer === true && extensions.has( 'EXT_clip_control' );\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\n\tconst maxSamples = gl.getParameter( gl.MAX_SAMPLES );\n\n\treturn {\n\n\t\tisWebGL2: true, // keeping this for backwards compatibility\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\ttextureFormatReadable: textureFormatReadable,\n\t\ttextureTypeReadable: textureTypeReadable,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\treverseDepthBuffer: reverseDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\nlet _oldActiveCubeFace = 0;\nlet _oldActiveMipmapLevel = 0;\nlet _oldXrEnabled = false;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t *\n\t * @param {Scene} scene\n\t * @param {number} sigma\n\t * @param {number} near\n\t * @param {number} far\n\t * @return {WebGLRenderTarget}\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\n\n\t\tthis._renderer.xr.enabled = false;\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported equirectangular image size is 64 x 32.\n\t *\n\t * @param {Texture} equirectangular\n\t * @param {WebGLRenderTarget} [renderTarget=null] - Optional render target.\n\t * @return {WebGLRenderTarget}\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported cube size is 16 x 16.\n\t *\n\t * @param {Texture} cubemap\n\t * @param {null} [renderTarget=null] - Optional render target.\n\t * @return {WebGLRenderTarget}\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\n\t\tthis._renderer.xr.enabled = _oldXrEnabled;\n\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\n\n\t\tthis._renderer.xr.enabled = false;\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\t\tconst n = this._lodPlanes.length;\n\n\t\tfor ( let i = 1; i < n; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( n - i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t *\n\t * @param {WebGLRenderTarget} cubeUVRenderTarget\n\t * @param {number} lodIn\n\t * @param {number} lodOut\n\t * @param {number} sigma\n\t * @param {Vector3} [poleAxis]\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\tconst currentPMREMVersion = renderTarget !== undefined ? renderTarget.texture.pmremVersion : 0;\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.pmremVersion !== currentPMREMVersion ) {\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\n\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( renderTarget !== undefined ) {\n\n\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\n\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function () {\n\n\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\t\t\tgetExtension( 'WEBGL_clip_cull_distance' );\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\t\t\tgetExtension( 'WEBGL_render_shared_exponent' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\twarnOnce( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info ) {\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tgl.drawElementsInstanced( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\textension.multiDrawElementsWEBGL( mode, counts, 0, type, starts, 0, drawCount );\n\n\t\tlet elementCount = 0;\n\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\telementCount += counts[ i ];\n\n\t\t}\n\n\t\tinfo.update( elementCount, mode, 1 );\n\n\n\t}\n\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\n\n\t\t\t\trenderInstances( starts[ i ] / bytesPerElement, counts[ i ], primcount[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsInstancedWEBGL( mode, counts, 0, type, starts, 0, primcount, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ] * primcount[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t// the following encodes morph targets into an array of data textures. Each layer represents a single morph target.\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet entry = morphTextures.get( geometry );\n\n\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\tlet vertexDataCount = 0;\n\n\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\tlet height = 1;\n\n\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t}\n\n\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\ttexture.type = FloatType;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\t// fill buffer\n\n\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tentry = {\n\t\t\t\tcount: morphTargetsCount,\n\t\t\t\ttexture: texture,\n\t\t\t\tsize: new Vector2( width, height )\n\t\t\t};\n\n\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\tfunction disposeTexture() {\n\n\t\t\t\ttexture.dispose();\n\n\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t}\n\n\t\t//\n\t\tif ( object.isInstancedMesh === true && object.morphTexture !== null ) {\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTexture', object.morphTexture, textures );\n\n\t\t} else {\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\n\nconst emptyShadowTexture = /*@__PURE__*/ new DepthTexture( 1, 1 );\n\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\tlet emptyTexture2D;\n\n\tif ( this.type === gl.SAMPLER_2D_SHADOW ) {\n\n\t\temptyShadowTexture.compareFunction = LessEqualCompare; // #28670\n\t\temptyTexture2D = emptyShadowTexture;\n\n\t} else {\n\n\t\temptyTexture2D = emptyTexture;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture2D, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\nconst COMPLETION_STATUS_KHR = 0x91B1;\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nconst _m0 = /*@__PURE__*/ new Matrix3();\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tColorManagement._getMatrix( _m0, ColorManagement.workingColorSpace, colorSpace );\n\n\tconst encodingMatrix = `mat3( ${ _m0.elements.map( ( v ) => v.toFixed( 4 ) ) } )`;\n\n\tswitch ( ColorManagement.getTransfer( colorSpace ) ) {\n\n\t\tcase LinearTransfer:\n\t\t\treturn [ encodingMatrix, 'LinearTransferOETF' ];\n\n\t\tcase SRGBTransfer:\n\t\t\treturn [ encodingMatrix, 'sRGBTransferOETF' ];\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space: ', colorSpace );\n\t\t\treturn [ encodingMatrix, 'LinearTransferOETF' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\n\treturn [\n\n\t\t`vec4 ${functionName}( vec4 value ) {`,\n\n\t\t`\treturn ${components[ 1 ]}( vec4( value.rgb * ${components[ 0 ]}, value.a ) );`,\n\n\t\t'}',\n\n\t].join( '\\n' );\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'Cineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase AgXToneMapping:\n\t\t\ttoneMappingName = 'AgX';\n\t\t\tbreak;\n\n\t\tcase NeutralToneMapping:\n\t\t\ttoneMappingName = 'Neutral';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\n\nfunction getLuminanceFunction() {\n\n\tColorManagement.getLuminanceCoefficients( _v0 );\n\n\tconst r = _v0.x.toFixed( 4 );\n\tconst g = _v0.y.toFixed( 4 );\n\tconst b = _v0.z.toFixed( 4 );\n\n\treturn [\n\n\t\t'float luminance( const in vec3 rgb ) {',\n\n\t\t`\tconst vec3 weights = vec3( ${ r }, ${ g }, ${ b } );`,\n\n\t\t'\treturn dot( weights, rgb );',\n\n\t\t'}'\n\n\t].join( '\\n' );\n\n}\n\nfunction generateVertexExtensions( parameters ) {\n\n\tconst chunks = [\n\t\tparameters.extensionClipCullDistance ? '#extension GL_ANGLE_clip_cull_distance : require' : '',\n\t\tparameters.extensionMultiDraw ? '#extension GL_ANGLE_multi_draw : require' : '',\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map();\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = `precision ${parameters.precision} float;\n\tprecision ${parameters.precision} int;\n\tprecision ${parameters.precision} sampler2D;\n\tprecision ${parameters.precision} samplerCube;\n\tprecision ${parameters.precision} sampler3D;\n\tprecision ${parameters.precision} sampler2DArray;\n\tprecision ${parameters.precision} sampler2DShadow;\n\tprecision ${parameters.precision} samplerCubeShadow;\n\tprecision ${parameters.precision} sampler2DArrayShadow;\n\tprecision ${parameters.precision} isampler2D;\n\tprecision ${parameters.precision} isampler3D;\n\tprecision ${parameters.precision} isamplerCube;\n\tprecision ${parameters.precision} isampler2DArray;\n\tprecision ${parameters.precision} usampler2D;\n\tprecision ${parameters.precision} usampler3D;\n\tprecision ${parameters.precision} usamplerCube;\n\tprecision ${parameters.precision} usampler2DArray;\n\t`;\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customVertexExtensions = generateVertexExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.extensionClipCullDistance ? '#define USE_CLIP_DISTANCE' : '',\n\t\t\tparameters.batching ? '#define USE_BATCHING' : '',\n\t\t\tparameters.batchingColor ? '#define USE_BATCHING_COLOR' : '',\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\t\t\tparameters.instancingMorph ? '#define USE_INSTANCING_MORPH' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.reverseDepthBuffer ? '#define USE_REVERSEDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_MORPH',\n\n\t\t\t'\tuniform sampler2D morphTexture;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.alphaToCoverage ? '#define ALPHA_TO_COVERAGE' : '',\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.dispersion ? '#define USE_DISPERSION' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor || parameters.batchingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\t\t\tparameters.decodeVideoTextureEmissive ? '#define DECODE_VIDEO_TEXTURE_EMISSIVE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.reverseDepthBuffer ? '#define USE_REVERSEDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\t\t\tgetLuminanceFunction(),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\tcustomVertexExtensions,\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tfunction onFirstUse( self ) {\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default error reporting\n\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t\t'Material Name: ' + self.name + '\\n' +\n\t\t\t\t\t\t'Material Type: ' + self.type + '\\n\\n' +\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\t\tfragmentErrors\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tself.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t}\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t// Populates cachedUniforms and cachedAttributes\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t// Populates cachedAttributes and cachedUniforms\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\n\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\n\n\tthis.isReady = function () {\n\n\t\tif ( programReady === false ) {\n\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\n\n\t\t}\n\n\t\treturn programReady;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst _activeChannels = new Set();\n\tconst programs = [];\n\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\t_activeChannels.add( value );\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst reverseDepthBuffer = renderer.state.buffers.depth.getReversed();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\t\tconst IS_BATCHEDMESH = object.isBatchedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_DISPERSION = material.dispersion > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tbatching: IS_BATCHEDMESH,\n\t\t\tbatchingColor: IS_BATCHEDMESH && object._colorsTexture !== null,\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\t\t\tinstancingMorph: IS_INSTANCEDMESH && object.morphTexture !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\t\t\talphaToCoverage: !! material.alphaToCoverage,\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tdispersion: HAS_DISPERSION,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending && material.alphaToCoverage === false,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( !! fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\t\treverseDepthBuffer: reverseDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumLightProbes: lights.numLightProbes,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\n\t\t\tdecodeVideoTextureEmissive: HAS_EMISSIVEMAP && ( material.emissiveMap.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.emissiveMap.colorSpace ) === SRGBTransfer ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionClipCullDistance: HAS_EXTENSIONS && material.extensions.clipCullDistance === true && extensions.has( 'WEBGL_clip_cull_distance' ),\n\t\t\textensionMultiDraw: ( HAS_EXTENSIONS && material.extensions.multiDraw === true || IS_BATCHEDMESH ) && extensions.has( 'WEBGL_multi_draw' ),\n\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\t// the usage of getChannel() determines the active texture channels for this shader\n\n\t\tparameters.vertexUv1s = _activeChannels.has( 1 );\n\t\tparameters.vertexUv2s = _activeChannels.has( 2 );\n\t\tparameters.vertexUv3s = _activeChannels.has( 3 );\n\n\t\t_activeChannels.clear();\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.numLightProbes );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingMorph )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.alphaHash )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.batching )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.dispersion )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.batchingColor )\n\t\t\t_programLayers.enable( 21 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.reverseDepthBuffer )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.decodeVideoTextureEmissive )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.alphaToCoverage )\n\t\t\t_programLayers.enable( 21 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction has( object ) {\n\n\t\treturn properties.has( object );\n\n\t}\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\thas: has,\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1,\n\n\t\t\tnumLightProbes: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0,\n\t\tnumLightProbes: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\tlet numLightProbes = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t\tnumLightProbes ++;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ||\n\t\t\thash.numLightProbes !== numLightProbes ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\t\t\tstate.numLightProbes = numLightProbes;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\thash.numLightProbes = numLightProbes;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions ) {\n\n\tconst lights = new WebGLLights( extensions );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init( camera ) {\n\n\t\tstate.camera = camera;\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights() {\n\n\t\tlights.setup( lightsArray );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tcamera: null,\n\n\t\tlights: lights,\n\n\t\ttransmissionRenderTarget: {}\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( renderer, objects, capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst activeCubeFace = renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst _state = renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( shadow.map );\n\t\t\trenderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\trenderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\trenderer.setRenderTarget( shadow.mapPass );\n\t\trenderer.clear();\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\trenderer.setRenderTarget( shadow.map );\n\t\trenderer.clear();\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\t\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t// make sure to remove the unique distance/depth materials used for shadow map rendering\n\n\t\tfor ( const id in _materialCache ) {\n\n\t\t\tconst cache = _materialCache[ id ];\n\n\t\t\tconst uuid = event.target.uuid;\n\n\t\t\tif ( uuid in cache ) {\n\n\t\t\t\tconst shadowMaterial = cache[ uuid ];\n\t\t\t\tshadowMaterial.dispose();\n\t\t\t\tdelete cache[ uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst reversedFuncs = {\n\t[ NeverDepth ]: AlwaysDepth,\n\t[ LessDepth ]: GreaterDepth,\n\t[ EqualDepth ]: NotEqualDepth,\n\t[ LessEqualDepth ]: GreaterEqualDepth,\n\n\t[ AlwaysDepth ]: NeverDepth,\n\t[ GreaterDepth ]: LessDepth,\n\t[ NotEqualDepth ]: EqualDepth,\n\t[ GreaterEqualDepth ]: LessEqualDepth,\n};\n\nfunction WebGLState( gl, extensions ) {\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\t\tlet reversed = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetReversed: function ( value ) {\n\n\t\t\t\tif ( reversed !== value ) {\n\n\t\t\t\t\tconst ext = extensions.get( 'EXT_clip_control' );\n\n\t\t\t\t\tif ( reversed ) {\n\n\t\t\t\t\t\text.clipControlEXT( ext.LOWER_LEFT_EXT, ext.ZERO_TO_ONE_EXT );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\text.clipControlEXT( ext.LOWER_LEFT_EXT, ext.NEGATIVE_ONE_TO_ONE_EXT );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst oldDepth = currentDepthClear;\n\t\t\t\t\tcurrentDepthClear = null;\n\t\t\t\t\tthis.setClear( oldDepth );\n\n\t\t\t\t}\n\n\t\t\t\treversed = value;\n\n\t\t\t},\n\n\t\t\tgetReversed: function () {\n\n\t\t\t\treturn reversed;\n\n\t\t\t},\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( reversed ) depthFunc = reversedFuncs[ depthFunc ];\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tif ( reversed ) {\n\n\t\t\t\t\t\tdepth = 1 - depth;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\t\t\t\treversed = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentBlendColor = new Color( 0, 0, 0 );\n\tlet currentBlendAlpha = 0;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t}\n\n\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t}\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tequationToGL[ MinEquation ] = gl.MIN;\n\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\n\t\t\t\tcurrentBlendAlpha = 0;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\n\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\n\n\t\t\tcurrentBlendColor.copy( blendColor );\n\t\t\tcurrentBlendAlpha = blendAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\t\tgl.blendColor( 0, 0, 0, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\n\t\tdepthBuffer.setReversed( false );\n\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\n\t\tcurrentBlendAlpha = 0;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _imageDimensions = new Vector2();\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\tconst dimensions = getDimensions( image );\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( dimensions.width > maxSize || dimensions.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( dimensions.width, dimensions.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ||\n\t\t\t\t( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) ) {\n\n\t\t\t\tconst width = Math.floor( scale * dimensions.width );\n\t\t\t\tconst height = Math.floor( scale * dimensions.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + dimensions.width + 'x' + dimensions.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + dimensions.width + 'x' + dimensions.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture ) {\n\n\t\treturn texture.generateMipmaps;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getTargetType( texture ) {\n\n\t\tif ( texture.isWebGLCubeRenderTarget ) return _gl.TEXTURE_CUBE_MAP;\n\t\tif ( texture.isWebGL3DRenderTarget ) return _gl.TEXTURE_3D;\n\t\tif ( texture.isWebGLArrayRenderTarget || texture.isCompressedArrayTexture ) return _gl.TEXTURE_2D_ARRAY;\n\t\treturn _gl.TEXTURE_2D;\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RG16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RG32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RG8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RG16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RG32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGB_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RGB8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RGB16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RGB32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RGB8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RGB16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RGB32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RGBA8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RGBA16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RGBA32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RGBA8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RGBA16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RGBA32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGB ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_INT_5_9_9_9_REV ) internalFormat = _gl.RGB9_E5;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getInternalDepthFormat( useStencil, depthType ) {\n\n\t\tlet glInternalFormat;\n\t\tif ( useStencil ) {\n\n\t\t\tif ( depthType === null || depthType === UnsignedIntType || depthType === UnsignedInt248Type ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t} else if ( depthType === FloatType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH32F_STENCIL8;\n\n\t\t\t} else if ( depthType === UnsignedShortType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\t\t\t\tconsole.warn( 'DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.' );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( depthType === null || depthType === UnsignedIntType || depthType === UnsignedInt248Type ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t} else if ( depthType === FloatType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t} else if ( depthType === UnsignedShortType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn glInternalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t\tproperties.remove( renderTarget.depthTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\tinfo.memory.textures --;\n\n\t\t\t}\n\n\t\t\tproperties.remove( textures[ i ] );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture ) {\n\n\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false &&\n\t\t\t( texture.magFilter === LinearFilter || texture.magFilter === LinearMipmapNearestFilter || texture.magFilter === NearestMipmapLinearFilter || texture.magFilter === LinearMipmapLinearFilter ||\n\t\t\ttexture.minFilter === LinearFilter || texture.minFilter === LinearMipmapNearestFilter || texture.minFilter === NearestMipmapLinearFilter || texture.minFilter === LinearMipmapLinearFilter ) ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device.' );\n\n\t\t}\n\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t}\n\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tlet image = resizeImage( texture.image, false, capabilities.maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tconst glType = utils.convert( texture.type );\n\t\t\tlet glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tconst levels = getMipLevels( texture, image );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\tglInternalFormat = getInternalDepthFormat( texture.format === DepthStencilFormat, texture.type );\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tif ( texture.layerUpdates.size > 0 ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst layerByteLength = getByteLength( mipmap.width, mipmap.height, texture.format, texture.type );\n\n\t\t\t\t\t\t\t\t\t\t\tfor ( const layerIndex of texture.layerUpdates ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tconst layerData = mipmap.data.subarray(\n\t\t\t\t\t\t\t\t\t\t\t\t\tlayerIndex * layerByteLength / mipmap.data.BYTES_PER_ELEMENT,\n\t\t\t\t\t\t\t\t\t\t\t\t\t( layerIndex + 1 ) * layerByteLength / mipmap.data.BYTES_PER_ELEMENT\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, layerIndex, mipmap.width, mipmap.height, 1, glFormat, layerData );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\ttexture.clearLayerUpdates();\n\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tif ( texture.layerUpdates.size > 0 ) {\n\n\t\t\t\t\t\t\tconst layerByteLength = getByteLength( image.width, image.height, texture.format, texture.type );\n\n\t\t\t\t\t\t\tfor ( const layerIndex of texture.layerUpdates ) {\n\n\t\t\t\t\t\t\t\tconst layerData = image.data.subarray(\n\t\t\t\t\t\t\t\t\tlayerIndex * layerByteLength / image.data.BYTES_PER_ELEMENT,\n\t\t\t\t\t\t\t\t\t( layerIndex + 1 ) * layerByteLength / image.data.BYTES_PER_ELEMENT\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, layerIndex, image.width, image.height, 1, glFormat, glType, layerData );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttexture.clearLayerUpdates();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tconst dimensions = getDimensions( mipmaps[ 0 ] );\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tconst dimensions = getDimensions( image );\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], true, capabilities.maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tlet levels = getMipLevels( texture, image );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tconst dimensions = getDimensions( cubeImage[ 0 ] );\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\ttextureProperties.__renderTarget = renderTarget;\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, textureProperties.__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, textureProperties.__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t// retrieve the depth attachment types\n\t\t\tconst depthTexture = renderTarget.depthTexture;\n\t\t\tconst depthType = depthTexture && depthTexture.isDepthTexture ? depthTexture.type : null;\n\t\t\tconst glInternalFormat = getInternalDepthFormat( renderTarget.stencilBuffer, depthType );\n\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\n\t\t\t// set up the attachment\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\tconst isUseMultisampledRTT = useMultisampledRTT( renderTarget );\n\t\t\tif ( isUseMultisampledRTT ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( isMultisample ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\tconst textureProperties = properties.get( renderTarget.depthTexture );\n\t\ttextureProperties.__renderTarget = renderTarget;\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! textureProperties.__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = textureProperties.__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\t// if the bound depth texture has changed\n\t\tif ( renderTargetProperties.__boundDepthTexture !== renderTarget.depthTexture ) {\n\n\t\t\t// fire the dispose event to get rid of stored state associated with the previously bound depth buffer\n\t\t\tconst depthTexture = renderTarget.depthTexture;\n\t\t\tif ( renderTargetProperties.__depthDisposeCallback ) {\n\n\t\t\t\trenderTargetProperties.__depthDisposeCallback();\n\n\t\t\t}\n\n\t\t\t// set up dispose listeners to track when the currently attached buffer is implicitly unbound\n\t\t\tif ( depthTexture ) {\n\n\t\t\t\tconst disposeEvent = () => {\n\n\t\t\t\t\tdelete renderTargetProperties.__boundDepthTexture;\n\t\t\t\t\tdelete renderTargetProperties.__depthDisposeCallback;\n\t\t\t\t\tdepthTexture.removeEventListener( 'dispose', disposeEvent );\n\n\t\t\t\t};\n\n\t\t\t\tdepthTexture.addEventListener( 'dispose', disposeEvent );\n\t\t\t\trenderTargetProperties.__depthDisposeCallback = disposeEvent;\n\n\t\t\t}\n\n\t\t\trenderTargetProperties.__boundDepthTexture = depthTexture;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer[ i ] === undefined ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// attach buffer if it's been created already\n\t\t\t\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\t\t\t\tconst renderbuffer = renderTargetProperties.__webglDepthbuffer[ i ];\n\t\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer === undefined ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// attach buffer if it's been created already\n\t\t\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\t\t\tconst renderbuffer = renderTargetProperties.__webglDepthbuffer;\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\n\t\tif ( ! isMultipleRenderTargets ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture );\n\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tconst targetType = getTargetType( renderTarget );\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( targetType, webglTexture );\n\t\t\t\tgenerateMipmap( targetType );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst invalidationArrayRead = [];\n\tconst invalidationArrayDraw = [];\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.samples > 0 ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = renderTarget.textures;\n\t\t\t\tconst width = renderTarget.width;\n\t\t\t\tconst height = renderTarget.height;\n\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\n\t\t\t\t// If MRT we need to remove FBO attachments\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTarget.resolveDepthBuffer ) {\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\n\t\t\t\t\t\t// resolving stencil is slow with a D3D backend. disable it for all transmission render targets (see #27799)\n\n\t\t\t\t\t\tif ( renderTarget.stencilBuffer && renderTarget.resolveStencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\t\tif ( supportsInvalidateFramebuffer === true ) {\n\n\t\t\t\t\t\tinvalidationArrayRead.length = 0;\n\t\t\t\t\t\tinvalidationArrayDraw.length = 0;\n\n\t\t\t\t\t\tinvalidationArrayRead.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false ) {\n\n\t\t\t\t\t\t\tinvalidationArrayRead.push( depthStyle );\n\t\t\t\t\t\t\tinvalidationArrayDraw.push( depthStyle );\n\n\t\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, invalidationArrayDraw );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArrayRead );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t} else {\n\n\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false && supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( capabilities.maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\n\n\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction getDimensions( image ) {\n\n\t\tif ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) {\n\n\t\t\t// if intrinsic data are not available, fallback to width/height\n\n\t\t\t_imageDimensions.width = image.naturalWidth || image.width;\n\t\t\t_imageDimensions.height = image.naturalHeight || image.height;\n\n\t\t} else if ( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) {\n\n\t\t\t_imageDimensions.width = image.displayWidth;\n\t\t\t_imageDimensions.height = image.displayHeight;\n\n\t\t} else {\n\n\t\t\t_imageDimensions.width = image.width;\n\t\t\t_imageDimensions.height = image.height;\n\n\t\t}\n\n\t\treturn _imageDimensions;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions ) {\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedInt5999Type ) return gl.UNSIGNED_INT_5_9_9_9_REV;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\t\tif ( p === HalfFloatType ) return gl.HALF_FLOAT;\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transfer === SRGBTransfer ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC\n\n\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) return gl.UNSIGNED_INT_24_8;\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nconst _occlusion_vertex = `\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}`;\n\nconst _occlusion_fragment = `\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}`;\n\nclass WebXRDepthSensing {\n\n\tconstructor() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t\tthis.depthNear = 0;\n\t\tthis.depthFar = 0;\n\n\t}\n\n\tinit( renderer, depthData, renderState ) {\n\n\t\tif ( this.texture === null ) {\n\n\t\t\tconst texture = new Texture();\n\n\t\t\tconst texProps = renderer.properties.get( texture );\n\t\t\ttexProps.__webglTexture = depthData.texture;\n\n\t\t\tif ( ( depthData.depthNear !== renderState.depthNear ) || ( depthData.depthFar !== renderState.depthFar ) ) {\n\n\t\t\t\tthis.depthNear = depthData.depthNear;\n\t\t\t\tthis.depthFar = depthData.depthFar;\n\n\t\t\t}\n\n\t\t\tthis.texture = texture;\n\n\t\t}\n\n\t}\n\n\tgetMesh( cameraXR ) {\n\n\t\tif ( this.texture !== null ) {\n\n\t\t\tif ( this.mesh === null ) {\n\n\t\t\t\tconst viewport = cameraXR.cameras[ 0 ].viewport;\n\t\t\t\tconst material = new ShaderMaterial( {\n\t\t\t\t\tvertexShader: _occlusion_vertex,\n\t\t\t\t\tfragmentShader: _occlusion_fragment,\n\t\t\t\t\tuniforms: {\n\t\t\t\t\t\tdepthColor: { value: this.texture },\n\t\t\t\t\t\tdepthWidth: { value: viewport.z },\n\t\t\t\t\t\tdepthHeight: { value: viewport.w }\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tthis.mesh = new Mesh( new PlaneGeometry( 20, 20 ), material );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this.mesh;\n\n\t}\n\n\treset() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t}\n\n\tgetDepthTexture() {\n\n\t\treturn this.texture;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\n\t\tconst depthSensing = new WebXRDepthSensing();\n\t\tconst attributes = gl.getContextAttributes();\n\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst currentSize = new Vector2();\n\t\tlet currentPixelRatio = null;\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\tdepthSensing.reset();\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\trenderer.setPixelRatio( currentPixelRatio );\n\t\t\trenderer.setSize( currentSize.width, currentSize.height, false );\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\trenderer.getSize( currentSize );\n\n\t\t\t\tconst useLayers = session.enabledFeatures !== undefined && session.enabledFeatures.includes( 'layers' );\n\n\t\t\t\tif ( ! useLayers ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glProjLayer.textureWidth, glProjLayer.textureHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0,\n\t\t\t\t\t\t\tresolveDepthBuffer: ( glProjLayer.ignoreDepthValues === false )\n\t\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getDepthTexture = function () {\n\n\t\t\treturn depthSensing.getDepthTexture();\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t *\n\t\t * @param {ArrayCamera} camera - The camera to update.\n\t\t * @param {PerspectiveCamera} cameraL - The left camera.\n\t\t * @param {PerspectiveCamera} cameraR - The right camera.\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Check if the projection uses an infinite far plane.\n\t\t\tif ( projL[ 10 ] === - 1.0 ) {\n\n\t\t\t\t// Use the projection matrix from the left eye.\n\t\t\t\t// The camera offset is sufficient to include the view volumes\n\t\t\t\t// of both eyes (assuming symmetric projections).\n\t\t\t\tcamera.projectionMatrix.copy( cameraL.projectionMatrix );\n\t\t\t\tcamera.projectionMatrixInverse.copy( cameraL.projectionMatrixInverse );\n\n\t\t\t} else {\n\n\t\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t\t// although must now be relative to the new union camera.\n\t\t\t\tconst near2 = near + zOffset;\n\t\t\t\tconst far2 = far + zOffset;\n\t\t\t\tconst left2 = left - xOffset;\n\t\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tlet depthNear = camera.near;\n\t\t\tlet depthFar = camera.far;\n\n\t\t\tif ( depthSensing.texture !== null ) {\n\n\t\t\t\tif ( depthSensing.depthNear > 0 ) depthNear = depthSensing.depthNear;\n\t\t\t\tif ( depthSensing.depthFar > 0 ) depthFar = depthSensing.depthFar;\n\n\t\t\t}\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = depthNear;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = depthFar;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t}\n\n\t\t\tcameraL.layers.mask = camera.layers.mask | 0b010;\n\t\t\tcameraR.layers.mask = camera.layers.mask | 0b100;\n\t\t\tcameraXR.layers.mask = cameraL.layers.mask | cameraR.layers.mask;\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.hasDepthSensing = function () {\n\n\t\t\treturn depthSensing.texture !== null;\n\n\t\t};\n\n\t\tthis.getDepthSensingMesh = function () {\n\n\t\t\treturn depthSensing.getMesh( cameraXR );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tconst enabledFeatures = session.enabledFeatures;\n\n\t\t\t\tif ( enabledFeatures && enabledFeatures.includes( 'depth-sensing' ) ) {\n\n\t\t\t\t\tconst depthData = glBinding.getDepthInformation( views[ 0 ] );\n\n\t\t\t\t\tif ( depthData && depthData.isValid && depthData.texture ) {\n\n\t\t\t\t\t\tdepthSensing.init( renderer, depthData, session.renderState );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nconst _e1 = /*@__PURE__*/ new Euler();\nconst _m1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst envMap = materialProperties.envMap;\n\t\tconst envMapRotation = materialProperties.envMapRotation;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\t_e1.copy( envMapRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1.x *= - 1; _e1.y *= - 1; _e1.z *= - 1;\n\n\t\t\tif ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1.y *= - 1;\n\t\t\t\t_e1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tuniforms.envMapRotation.value.setFromMatrix4( _m1.makeRotationFromEuler( _e1 ) );\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.dispersion > 0 ) {\n\n\t\t\tuniforms.dispersion.value = material.dispersion;\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ); // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tif ( hasUniformChanged( uniform, i, j, cache ) === true ) {\n\n\t\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\t\tfor ( let k = 0; k < values.length; k ++ ) {\n\n\t\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t\t// TODO add integer and struct support\n\t\t\t\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\t\tuniform.__data[ 3 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\t\tuniform.__data[ 7 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\t\tuniform.__data[ 11 ] = 0;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, indexArray, cache ) {\n\n\t\tconst value = uniform.value;\n\t\tconst indexString = index + '_' + indexArray;\n\n\t\tif ( cache[ indexString ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tcache[ indexString ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ indexString ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\tconst cachedObject = cache[ indexString ];\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tif ( cachedObject !== value ) {\n\n\t\t\t\t\tcache[ indexString ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tfor ( let k = 0, kl = values.length; k < kl; k ++ ) {\n\n\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\tconst chunkOffset = offset % chunkSize; // offset in the current chunk\n\t\t\t\t\tconst chunkPadding = chunkOffset % info.boundary; // required padding to match boundary\n\t\t\t\t\tconst chunkStart = chunkOffset + chunkPadding; // the start position in the current chunk for the data\n\n\t\t\t\t\toffset += chunkPadding;\n\n\t\t\t\t\t// Check for chunk overflow\n\t\t\t\t\tif ( chunkStart !== 0 && ( chunkSize - chunkStart ) < info.storage ) {\n\n\t\t\t\t\t\t// Add padding and adjust offset\n\t\t\t\t\t\toffset += ( chunkSize - chunkStart );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following two properties will be used for partial buffer updates\n\t\t\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t\t// Update the global offset\n\t\t\t\t\toffset += info.storage;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tconst chunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t// float/int/bool\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = false,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t\treverseDepthBuffer = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && context instanceof WebGLRenderingContext ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer: WebGL 1 is not supported since r163.' );\n\n\t\t\t}\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis._outputColorSpace = SRGBColorSpace;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// transmission render target scale\n\t\tthis.transmissionResolutionScale = 1.0;\n\n\t\t// camera matrices cache\n\n\t\tconst _currentProjectionMatrix = new Matrix4();\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _vector4 = new Vector4();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tlet _renderBackground = false;\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextName, contextAttributes ) {\n\n\t\t\treturn canvas.getContext( contextName, contextAttributes );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextName = 'webgl2';\n\n\t\t\t\t_gl = getContext( contextName, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextName ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\t\t\textensions.init();\n\n\t\t\tutils = new WebGLUtils( _gl, extensions );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters, utils );\n\n\t\t\tstate = new WebGLState( _gl, extensions );\n\n\t\t\tif ( capabilities.reverseDepthBuffer && reverseDepthBuffer ) {\n\n\t\t\t\tstate.buffers.depth.setReversed( true );\n\n\t\t\t}\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, attributes );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) {\n\n\t\t\t\tbits |= _gl.DEPTH_BUFFER_BIT;\n\n\t\t\t}\n\n\t\t\tif ( stencil ) {\n\n\t\t\t\tbits |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\tthis.state.buffers.stencil.setMask( 0xffffffff );\n\n\t\t\t}\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tbackground.dispose();\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tif ( object._multiDrawInstances !== null ) {\n\n\t\t\t\t\trenderer.renderMultiDrawInstances( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount, object._multiDrawInstances );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! extensions.get( 'WEBGL_multi_draw' ) ) {\n\n\t\t\t\t\t\tconst starts = object._multiDrawStarts;\n\t\t\t\t\t\tconst counts = object._multiDrawCounts;\n\t\t\t\t\t\tconst drawCount = object._multiDrawCount;\n\t\t\t\t\t\tconst bytesPerElement = index ? attributes.get( index ).bytesPerElement : 1;\n\t\t\t\t\t\tconst uniforms = properties.get( material ).currentProgram.getUniforms();\n\t\t\t\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\t\t\t\tuniforms.setValue( _gl, '_gl_DrawID', i );\n\t\t\t\t\t\t\trenderer.render( starts[ i ] / bytesPerElement, counts[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\trenderer.renderMultiDraw( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tfunction prepareMaterial( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.compile = function ( scene, camera, targetScene = null ) {\n\n\t\t\tif ( targetScene === null ) targetScene = scene;\n\n\t\t\tcurrentRenderState = renderStates.get( targetScene );\n\t\t\tcurrentRenderState.init( camera );\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t// gather lights from both the target scene and the new object that will be added to the scene.\n\n\t\t\ttargetScene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( scene !== targetScene ) {\n\n\t\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tcurrentRenderState.setupLights();\n\n\t\t\t// Only initialize materials in the new scene, not the targetScene.\n\n\t\t\tconst materials = new Set();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( ! ( object.isMesh || object.isPoints || object.isLine || object.isSprite ) ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepareMaterial( material2, targetScene, object );\n\t\t\t\t\t\t\tmaterials.add( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepareMaterial( material, targetScene, object );\n\t\t\t\t\t\tmaterials.add( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t\treturn materials;\n\n\t\t};\n\n\t\t// compileAsync\n\n\t\tthis.compileAsync = function ( scene, camera, targetScene = null ) {\n\n\t\t\tconst materials = this.compile( scene, camera, targetScene );\n\n\t\t\t// Wait for all the materials in the new object to indicate that they're\n\t\t\t// ready to be used before resolving the promise.\n\n\t\t\treturn new Promise( ( resolve ) => {\n\n\t\t\t\tfunction checkMaterialsReady() {\n\n\t\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\t\tconst materialProperties = properties.get( material );\n\t\t\t\t\t\tconst program = materialProperties.currentProgram;\n\n\t\t\t\t\t\tif ( program.isReady() ) {\n\n\t\t\t\t\t\t\t// remove any programs that report they're ready to use from the list\n\t\t\t\t\t\t\tmaterials.delete( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\t// once the list of compiling materials is empty, call the callback\n\n\t\t\t\t\tif ( materials.size === 0 ) {\n\n\t\t\t\t\t\tresolve( scene );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if some materials are still not ready, wait a bit and check again\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extensions.get( 'KHR_parallel_shader_compile' ) !== null ) {\n\n\t\t\t\t\t// If we can check the compilation status of the materials without\n\t\t\t\t\t// blocking then do so right away.\n\n\t\t\t\t\tcheckMaterialsReady();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise start by waiting a bit to give the materials we just\n\t\t\t\t\t// initialized a chance to finish.\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init( camera );\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tconst depthSensingMesh = _this.xr.getDepthSensingMesh();\n\n\t\t\t\tif ( depthSensingMesh !== null ) {\n\n\t\t\t\t\tprojectObject( depthSensingMesh, camera, - Infinity, _this.sortObjects );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t_renderBackground = xr.enabled === false || xr.isPresenting === false || xr.hasDepthSensing() === false;\n\t\t\tif ( _renderBackground ) {\n\n\t\t\t\tbackground.addToRenderList( currentRenderList, scene );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t\t// render scene\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\n\t\t\tcurrentRenderState.setupLights();\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tif ( transmissiveObjects.length > 0 ) {\n\n\t\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\t\trenderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null && _currentActiveMipmapLevel === 0 ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, currentRenderState.state.camera );\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector4.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector4.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector4.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector4.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector4\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector4.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector4.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tif ( overrideMaterial !== null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( currentRenderState.state.transmissionRenderTarget[ camera.id ] === undefined ) {\n\n\t\t\t\tcurrentRenderState.state.transmissionRenderTarget[ camera.id ] = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: 4,\n\t\t\t\t\tstencilBuffer: stencil,\n\t\t\t\t\tresolveDepthBuffer: false,\n\t\t\t\t\tresolveStencilBuffer: false,\n\t\t\t\t\tcolorSpace: ColorManagement.workingColorSpace,\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\tconst transmissionRenderTarget = currentRenderState.state.transmissionRenderTarget[ camera.id ];\n\n\t\t\tconst activeViewport = camera.viewport || _currentViewport;\n\t\t\ttransmissionRenderTarget.setSize( activeViewport.z * _this.transmissionResolutionScale, activeViewport.w * _this.transmissionResolutionScale );\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\t// Remove viewport from camera to avoid nested render calls resetting viewport to it (e.g Reflector).\n\t\t\t// Transmission render pass requires viewport to match the transmissionRenderTarget.\n\t\t\tconst currentCameraViewport = camera.viewport;\n\t\t\tif ( camera.viewport !== undefined ) camera.viewport = undefined;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\n\n\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === false ) { // see #28131\n\n\t\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\t\tconst object = renderItem.object;\n\t\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\t\tconst material = renderItem.material;\n\t\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\n\t\t\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\tif ( currentCameraViewport !== undefined ) camera.viewport = currentCameraViewport;\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\t\t\tmaterialProperties.envMapRotation = ( materialProperties.environment !== null && material.envMap === null ) ? scene.environmentRotation : material.envMapRotation;\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = null;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction getUniformList( materialProperties ) {\n\n\t\t\tif ( materialProperties.uniformsList === null ) {\n\n\t\t\t\tconst progUniforms = materialProperties.currentProgram.getUniforms();\n\t\t\t\tmaterialProperties.uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, materialProperties.uniforms );\n\n\t\t\t}\n\n\t\t\treturn materialProperties.uniformsList;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.batching = parameters.batching;\n\t\t\tmaterialProperties.batchingColor = parameters.batchingColor;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.instancingMorph = parameters.instancingMorph;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batching === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isBatchedMesh && materialProperties.batching === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batchingColor === true && object.colorTexture === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batchingColor === false && object.colorTexture !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === true && object.morphTexture === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === false && object.morphTexture !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t// common camera uniforms\n\n\t\t\t\tconst reverseDepthBuffer = state.buffers.depth.getReversed();\n\n\t\t\t\tif ( reverseDepthBuffer ) {\n\n\t\t\t\t\t_currentProjectionMatrix.copy( camera.projectionMatrix );\n\n\t\t\t\t\ttoNormalizedProjectionMatrix( _currentProjectionMatrix );\n\t\t\t\t\ttoReversedProjectionMatrix( _currentProjectionMatrix );\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', _currentProjectionMatrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingTexture', object._matricesTexture, textures );\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingIdTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingIdTexture', object._indirectTexture, textures );\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingColorTexture' );\n\t\t\t\tif ( object._colorsTexture !== null ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'batchingColorTexture', object._colorsTexture, textures );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshStandardMaterial && material.envMap === null && scene.environment !== null ) {\n\n\t\t\t\tm_uniforms.envMapIntensity.value = scene.environmentIntensity;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, currentRenderState.state.transmissionRenderTarget[ camera.id ] );\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tconst _scratchFrameBuffer = _gl.createFramebuffer();\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t} else if ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t// check if the depth texture is already bound to the frame buffer and that it's been initialized\n\t\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\t\t\t\t\tif ( renderTargetProperties.__boundDepthTexture !== depthTexture ) {\n\n\t\t\t\t\t\t// check if the depth texture is compatible\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tdepthTexture !== null &&\n\t\t\t\t\t\t\tproperties.has( depthTexture ) &&\n\t\t\t\t\t\t\t( renderTarget.width !== depthTexture.image.width || renderTarget.height !== depthTexture.image.height )\n\t\t\t\t\t\t) {\n\n\t\t\t\t\t\t\tthrow new Error( 'WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Swap the depth buffer to the currently attached one\n\t\t\t\t\t\ttextures.setupDepthRenderbuffer( renderTarget );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\t// Use a scratch frame buffer if rendering to a mip level to avoid depth buffers\n\t\t\t// being bound that are different sizes.\n\t\t\tif ( activeMipmapLevel !== 0 ) {\n\n\t\t\t\tframebuffer = _scratchFrameBuffer;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel, layer );\n\n\t\t\t} else if ( renderTarget !== null && activeMipmapLevel !== 0 ) {\n\n\t\t\t\t// Only bind the frame buffer if we are using a scratch frame buffer to render to a mipmap.\n\t\t\t\t// If we rebind the texture when using a multi sample buffer then an error about inconsistent samples will be thrown.\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( ! capabilities.textureFormatReadable( textureFormat ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! capabilities.textureTypeReadable( textureType ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.readRenderTargetPixelsAsync = async function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( ! capabilities.textureFormatReadable( textureFormat ) ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! capabilities.textureTypeReadable( textureType ) ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\n\t\t\t\t}\n\n\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t// set the active frame buffer to the one we want to read\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t\tconst glBuffer = _gl.createBuffer();\n\t\t\t\t\t_gl.bindBuffer( _gl.PIXEL_PACK_BUFFER, glBuffer );\n\t\t\t\t\t_gl.bufferData( _gl.PIXEL_PACK_BUFFER, buffer.byteLength, _gl.STREAM_READ );\n\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), 0 );\n\n\t\t\t\t\t// reset the frame buffer to the currently set buffer before waiting\n\t\t\t\t\tconst currFramebuffer = _currentRenderTarget !== null ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, currFramebuffer );\n\n\t\t\t\t\t// check if the commands have finished every 8 ms\n\t\t\t\t\tconst sync = _gl.fenceSync( _gl.SYNC_GPU_COMMANDS_COMPLETE, 0 );\n\n\t\t\t\t\t_gl.flush();\n\n\t\t\t\t\tawait probeAsync( _gl, sync, 4 );\n\n\t\t\t\t\t// read the data and delete the buffer\n\t\t\t\t\t_gl.bindBuffer( _gl.PIXEL_PACK_BUFFER, glBuffer );\n\t\t\t\t\t_gl.getBufferSubData( _gl.PIXEL_PACK_BUFFER, 0, buffer );\n\t\t\t\t\t_gl.deleteBuffer( glBuffer );\n\t\t\t\t\t_gl.deleteSync( sync );\n\n\t\t\t\t\treturn buffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( texture, position = null, level = 0 ) {\n\n\t\t\t// support previous signature with position first\n\t\t\tif ( texture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\twarnOnce( 'WebGLRenderer: copyFramebufferToTexture function signature has changed.' );\n\n\t\t\t\tposition = arguments[ 0 ] || null;\n\t\t\t\ttexture = arguments[ 1 ];\n\n\t\t\t}\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\tconst x = position !== null ? position.x : 0;\n\t\t\tconst y = position !== null ? position.y : 0;\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, x, y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tconst _srcFramebuffer = _gl.createFramebuffer();\n\t\tconst _dstFramebuffer = _gl.createFramebuffer();\n\t\tthis.copyTextureToTexture = function ( srcTexture, dstTexture, srcRegion = null, dstPosition = null, srcLevel = 0, dstLevel = null ) {\n\n\t\t\t// support previous signature with dstPosition first\n\t\t\tif ( srcTexture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\twarnOnce( 'WebGLRenderer: copyTextureToTexture function signature has changed.' );\n\n\t\t\t\tdstPosition = arguments[ 0 ] || null;\n\t\t\t\tsrcTexture = arguments[ 1 ];\n\t\t\t\tdstTexture = arguments[ 2 ];\n\t\t\t\tdstLevel = arguments[ 3 ] || 0;\n\t\t\t\tsrcRegion = null;\n\n\t\t\t}\n\n\t\t\t// support the previous signature with just a single dst mipmap level\n\t\t\tif ( dstLevel === null ) {\n\n\t\t\t\tif ( srcLevel !== 0 ) {\n\n\t\t\t\t\t// @deprecated, r171\n\t\t\t\t\twarnOnce( 'WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels.' );\n\t\t\t\t\tdstLevel = srcLevel;\n\t\t\t\t\tsrcLevel = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdstLevel = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// gather the necessary dimensions to copy\n\t\t\tlet width, height, depth, minX, minY, minZ;\n\t\t\tlet dstX, dstY, dstZ;\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ dstLevel ] : srcTexture.image;\n\t\t\tif ( srcRegion !== null ) {\n\n\t\t\t\twidth = srcRegion.max.x - srcRegion.min.x;\n\t\t\t\theight = srcRegion.max.y - srcRegion.min.y;\n\t\t\t\tdepth = srcRegion.isBox3 ? srcRegion.max.z - srcRegion.min.z : 1;\n\t\t\t\tminX = srcRegion.min.x;\n\t\t\t\tminY = srcRegion.min.y;\n\t\t\t\tminZ = srcRegion.isBox3 ? srcRegion.min.z : 0;\n\n\t\t\t} else {\n\n\t\t\t\tconst levelScale = Math.pow( 2, - srcLevel );\n\t\t\t\twidth = Math.floor( image.width * levelScale );\n\t\t\t\theight = Math.floor( image.height * levelScale );\n\t\t\t\tif ( srcTexture.isDataArrayTexture ) {\n\n\t\t\t\t\tdepth = image.depth;\n\n\t\t\t\t} else if ( srcTexture.isData3DTexture ) {\n\n\t\t\t\t\tdepth = Math.floor( image.depth * levelScale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdepth = 1;\n\n\t\t\t\t}\n\n\t\t\t\tminX = 0;\n\t\t\t\tminY = 0;\n\t\t\t\tminZ = 0;\n\n\t\t\t}\n\n\t\t\tif ( dstPosition !== null ) {\n\n\t\t\t\tdstX = dstPosition.x;\n\t\t\t\tdstY = dstPosition.y;\n\t\t\t\tdstZ = dstPosition.z;\n\n\t\t\t} else {\n\n\t\t\t\tdstX = 0;\n\t\t\t\tdstY = 0;\n\t\t\t\tdstZ = 0;\n\n\t\t\t}\n\n\t\t\t// Set up the destination target\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture || dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\t// used for copying data from cpu\n\t\t\tconst currentUnpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst currentUnpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst currentUnpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst currentUnpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst currentUnpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, minX );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, minY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, minZ );\n\n\t\t\t// set up the src texture\n\t\t\tconst isSrc3D = srcTexture.isDataArrayTexture || srcTexture.isData3DTexture;\n\t\t\tconst isDst3D = dstTexture.isDataArrayTexture || dstTexture.isData3DTexture;\n\t\t\tif ( srcTexture.isDepthTexture ) {\n\n\t\t\t\tconst srcTextureProperties = properties.get( srcTexture );\n\t\t\t\tconst dstTextureProperties = properties.get( dstTexture );\n\t\t\t\tconst srcRenderTargetProperties = properties.get( srcTextureProperties.__renderTarget );\n\t\t\t\tconst dstRenderTargetProperties = properties.get( dstTextureProperties.__renderTarget );\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, srcRenderTargetProperties.__webglFramebuffer );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, dstRenderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < depth; i ++ ) {\n\n\t\t\t\t\t// if the source or destination are a 3d target then a layer needs to be bound\n\t\t\t\t\tif ( isSrc3D ) {\n\n\t\t\t\t\t\t_gl.framebufferTextureLayer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, properties.get( srcTexture ).__webglTexture, srcLevel, minZ + i );\n\t\t\t\t\t\t_gl.framebufferTextureLayer( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, properties.get( dstTexture ).__webglTexture, dstLevel, dstZ + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.blitFramebuffer( minX, minY, width, height, dstX, dstY, width, height, _gl.DEPTH_BUFFER_BIT, _gl.NEAREST );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t} else if ( srcLevel !== 0 || srcTexture.isRenderTargetTexture || properties.has( srcTexture ) ) {\n\n\t\t\t\t// get the appropriate frame buffers\n\t\t\t\tconst srcTextureProperties = properties.get( srcTexture );\n\t\t\t\tconst dstTextureProperties = properties.get( dstTexture );\n\n\t\t\t\t// bind the frame buffer targets\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, _srcFramebuffer );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, _dstFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < depth; i ++ ) {\n\n\t\t\t\t\t// assign the correct layers and mip maps to the frame buffers\n\t\t\t\t\tif ( isSrc3D ) {\n\n\t\t\t\t\t\t_gl.framebufferTextureLayer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, srcTextureProperties.__webglTexture, srcLevel, minZ + i );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, srcTextureProperties.__webglTexture, srcLevel );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isDst3D ) {\n\n\t\t\t\t\t\t_gl.framebufferTextureLayer( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, dstTextureProperties.__webglTexture, dstLevel, dstZ + i );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, dstTextureProperties.__webglTexture, dstLevel );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// copy the data using the fastest function that can achieve the copy\n\t\t\t\t\tif ( srcLevel !== 0 ) {\n\n\t\t\t\t\t\t_gl.blitFramebuffer( minX, minY, width, height, dstX, dstY, width, height, _gl.COLOR_BUFFER_BIT, _gl.NEAREST );\n\n\t\t\t\t\t} else if ( isDst3D ) {\n\n\t\t\t\t\t\t_gl.copyTexSubImage3D( glTarget, dstLevel, dstX, dstY, dstZ + i, minX, minY, width, height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.copyTexSubImage2D( glTarget, dstLevel, dstX, dstY, minX, minY, width, height );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// unbind read, draw buffers\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t} else {\n\n\t\t\t\tif ( isDst3D ) {\n\n\t\t\t\t\t// copy data into the 3d texture\n\t\t\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t\t\t_gl.texSubImage3D( glTarget, dstLevel, dstX, dstY, dstZ, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t\t\t} else if ( dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, dstLevel, dstX, dstY, dstZ, width, height, depth, glFormat, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.texSubImage3D( glTarget, dstLevel, dstX, dstY, dstZ, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// copy data into the 2d texture\n\t\t\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, dstLevel, dstX, dstY, width, height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else if ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, dstLevel, dstX, dstY, image.width, image.height, glFormat, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, dstLevel, dstX, dstY, width, height, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// reset values\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, currentUnpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, currentUnpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, currentUnpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, currentUnpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, currentUnpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( dstLevel === 0 && dstTexture.generateMipmaps ) {\n\n\t\t\t\t_gl.generateMipmap( glTarget );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( srcTexture, dstTexture, srcRegion = null, dstPosition = null, level = 0 ) {\n\n\t\t\t// support previous signature with source box first\n\t\t\tif ( srcTexture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\twarnOnce( 'WebGLRenderer: copyTextureToTexture3D function signature has changed.' );\n\n\t\t\t\tsrcRegion = arguments[ 0 ] || null;\n\t\t\t\tdstPosition = arguments[ 1 ] || null;\n\t\t\t\tsrcTexture = arguments[ 2 ];\n\t\t\t\tdstTexture = arguments[ 3 ];\n\t\t\t\tlevel = arguments[ 4 ] || 0;\n\n\t\t\t}\n\n\t\t\t// @deprecated, r170\n\t\t\twarnOnce( 'WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use \"copyTextureToTexture\" instead.' );\n\n\t\t\treturn this.copyTextureToTexture( srcTexture, dstTexture, srcRegion, dstPosition, level );\n\n\t\t};\n\n\t\tthis.initRenderTarget = function ( target ) {\n\n\t\t\tif ( properties.get( target ).__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( target );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget outputColorSpace() {\n\n\t\treturn this._outputColorSpace;\n\n\t}\n\n\tset outputColorSpace( colorSpace ) {\n\n\t\tthis._outputColorSpace = colorSpace;\n\n\t\tconst gl = this.getContext();\n\t\tgl.drawingBufferColorspace = ColorManagement._getDrawingBufferColorSpace( colorSpace );\n\t\tgl.unpackColorSpace = ColorManagement._getUnpackColorSpace();\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, ArrayCamera, BackSide, BoxGeometry, BufferAttribute, BufferGeometry, ByteType, CineonToneMapping, ClampToEdgeWrapping, Color, ColorManagement, ConstantAlphaFactor, ConstantColorFactor, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeUVReflectionMapping, CullFaceBack, CullFaceFront, CullFaceNone, CustomBlending, CustomToneMapping, Data3DTexture, DataArrayTexture, DepthFormat, DepthStencilFormat, DepthTexture, DoubleSide, DstAlphaFactor, DstColorFactor, EqualCompare, EqualDepth, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, FloatType, FrontSide, Frustum, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, Group, HalfFloatType, IntType, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LinearFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, LuminanceAlphaFormat, LuminanceFormat, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeutralToneMapping, NeverCompare, NeverDepth, NoBlending, NoColorSpace, NoToneMapping, NormalBlending, NotEqualCompare, NotEqualDepth, ObjectSpaceNormalMap, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, PerspectiveCamera, Plane, PlaneGeometry, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReverseSubtractEquation, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, ShaderChunk, ShaderLib, ShaderMaterial, ShortType, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, SubtractEquation, SubtractiveBlending, TangentSpaceNormalMap, Texture, Uint16BufferAttribute, Uint32BufferAttribute, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedInt5999Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLRenderTarget, WebGLRenderer, WebGLUtils, ZeroFactor, createCanvasElement };\n","import {\n\tControls,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst _TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nconst _v = new Vector3();\nconst _twoPI = 2 * Math.PI;\n\nconst _STATE = {\n\tNONE: - 1,\n\tROTATE: 0,\n\tDOLLY: 1,\n\tPAN: 2,\n\tTOUCH_ROTATE: 3,\n\tTOUCH_PAN: 4,\n\tTOUCH_DOLLY_PAN: 5,\n\tTOUCH_DOLLY_ROTATE: 6\n};\nconst _EPS = 0.000001;\n\nclass OrbitControls extends Controls {\n\n\tconstructor( object, domElement = null ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.state = _STATE.NONE;\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// Sets the 3D cursor (similar to Blender), from which the maxTargetRadius takes effect\n\t\tthis.cursor = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// Limit camera target within a spherical area around the cursor\n\t\tthis.minTargetRadius = 0;\n\t\tthis.maxTargetRadius = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\t\tthis.keyRotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\tthis.zoomToCursor = false;\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t// internals\n\n\t\tthis._lastPosition = new Vector3();\n\t\tthis._lastQuaternion = new Quaternion();\n\t\tthis._lastTargetPosition = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tthis._quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tthis._quatInverse = this._quat.clone().invert();\n\n\t\t// current position in spherical coordinates\n\t\tthis._spherical = new Spherical();\n\t\tthis._sphericalDelta = new Spherical();\n\n\t\tthis._scale = 1;\n\t\tthis._panOffset = new Vector3();\n\n\t\tthis._rotateStart = new Vector2();\n\t\tthis._rotateEnd = new Vector2();\n\t\tthis._rotateDelta = new Vector2();\n\n\t\tthis._panStart = new Vector2();\n\t\tthis._panEnd = new Vector2();\n\t\tthis._panDelta = new Vector2();\n\n\t\tthis._dollyStart = new Vector2();\n\t\tthis._dollyEnd = new Vector2();\n\t\tthis._dollyDelta = new Vector2();\n\n\t\tthis._dollyDirection = new Vector3();\n\t\tthis._mouse = new Vector2();\n\t\tthis._performCursorZoom = false;\n\n\t\tthis._pointers = [];\n\t\tthis._pointerPositions = {};\n\n\t\tthis._controlActive = false;\n\n\t\t// event listeners\n\n\t\tthis._onPointerMove = onPointerMove.bind( this );\n\t\tthis._onPointerDown = onPointerDown.bind( this );\n\t\tthis._onPointerUp = onPointerUp.bind( this );\n\t\tthis._onContextMenu = onContextMenu.bind( this );\n\t\tthis._onMouseWheel = onMouseWheel.bind( this );\n\t\tthis._onKeyDown = onKeyDown.bind( this );\n\n\t\tthis._onTouchStart = onTouchStart.bind( this );\n\t\tthis._onTouchMove = onTouchMove.bind( this );\n\n\t\tthis._onMouseDown = onMouseDown.bind( this );\n\t\tthis._onMouseMove = onMouseMove.bind( this );\n\n\t\tthis._interceptControlDown = interceptControlDown.bind( this );\n\t\tthis._interceptControlUp = interceptControlUp.bind( this );\n\n\t\t//\n\n\t\tif ( this.domElement !== null ) {\n\n\t\t\tthis.connect();\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\tconnect() {\n\n\t\tthis.domElement.addEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.addEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.addEventListener( 'contextmenu', this._onContextMenu );\n\t\tthis.domElement.addEventListener( 'wheel', this._onMouseWheel, { passive: false } );\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.addEventListener( 'keydown', this._interceptControlDown, { passive: true, capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t}\n\n\tdisconnect() {\n\n\t\tthis.domElement.removeEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\t\tthis.domElement.removeEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.removeEventListener( 'wheel', this._onMouseWheel );\n\t\tthis.domElement.removeEventListener( 'contextmenu', this._onContextMenu );\n\n\t\tthis.stopListenToKeyEvents();\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.removeEventListener( 'keydown', this._interceptControlDown, { capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'auto';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.disconnect();\n\n\t}\n\n\tgetPolarAngle() {\n\n\t\treturn this._spherical.phi;\n\n\t}\n\n\tgetAzimuthalAngle() {\n\n\t\treturn this._spherical.theta;\n\n\t}\n\n\tgetDistance() {\n\n\t\treturn this.object.position.distanceTo( this.target );\n\n\t}\n\n\tlistenToKeyEvents( domElement ) {\n\n\t\tdomElement.addEventListener( 'keydown', this._onKeyDown );\n\t\tthis._domElementKeyEvents = domElement;\n\n\t}\n\n\tstopListenToKeyEvents() {\n\n\t\tif ( this._domElementKeyEvents !== null ) {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', this._onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t}\n\n\t}\n\n\tsaveState() {\n\n\t\tthis.target0.copy( this.target );\n\t\tthis.position0.copy( this.object.position );\n\t\tthis.zoom0 = this.object.zoom;\n\n\t}\n\n\treset() {\n\n\t\tthis.target.copy( this.target0 );\n\t\tthis.object.position.copy( this.position0 );\n\t\tthis.object.zoom = this.zoom0;\n\n\t\tthis.object.updateProjectionMatrix();\n\t\tthis.dispatchEvent( _changeEvent );\n\n\t\tthis.update();\n\n\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tupdate( deltaTime = null ) {\n\n\t\tconst position = this.object.position;\n\n\t\t_v.copy( position ).sub( this.target );\n\n\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t_v.applyQuaternion( this._quat );\n\n\t\t// angle from z-axis around y-axis\n\t\tthis._spherical.setFromVector3( _v );\n\n\t\tif ( this.autoRotate && this.state === _STATE.NONE ) {\n\n\t\t\tthis._rotateLeft( this._getAutoRotationAngle( deltaTime ) );\n\n\t\t}\n\n\t\tif ( this.enableDamping ) {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta * this.dampingFactor;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi * this.dampingFactor;\n\n\t\t} else {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi;\n\n\t\t}\n\n\t\t// restrict theta to be between desired limits\n\n\t\tlet min = this.minAzimuthAngle;\n\t\tlet max = this.maxAzimuthAngle;\n\n\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\tif ( min < - Math.PI ) min += _twoPI; else if ( min > Math.PI ) min -= _twoPI;\n\n\t\t\tif ( max < - Math.PI ) max += _twoPI; else if ( max > Math.PI ) max -= _twoPI;\n\n\t\t\tif ( min <= max ) {\n\n\t\t\t\tthis._spherical.theta = Math.max( min, Math.min( max, this._spherical.theta ) );\n\n\t\t\t} else {\n\n\t\t\t\tthis._spherical.theta = ( this._spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\tMath.max( min, this._spherical.theta ) :\n\t\t\t\t\tMath.min( max, this._spherical.theta );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restrict phi to be between desired limits\n\t\tthis._spherical.phi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, this._spherical.phi ) );\n\n\t\tthis._spherical.makeSafe();\n\n\n\t\t// move target to panned location\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis.target.addScaledVector( this._panOffset, this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis.target.add( this._panOffset );\n\n\t\t}\n\n\t\t// Limit the target distance from the cursor to create a sphere around the center of interest\n\t\tthis.target.sub( this.cursor );\n\t\tthis.target.clampLength( this.minTargetRadius, this.maxTargetRadius );\n\t\tthis.target.add( this.cursor );\n\n\t\tlet zoomChanged = false;\n\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t// we adjust zoom later in these cases\n\t\tif ( this.zoomToCursor && this._performCursorZoom || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius );\n\n\t\t} else {\n\n\t\t\tconst prevRadius = this._spherical.radius;\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius * this._scale );\n\t\t\tzoomChanged = prevRadius != this._spherical.radius;\n\n\t\t}\n\n\t\t_v.setFromSpherical( this._spherical );\n\n\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t_v.applyQuaternion( this._quatInverse );\n\n\t\tposition.copy( this.target ).add( _v );\n\n\t\tthis.object.lookAt( this.target );\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis._sphericalDelta.theta *= ( 1 - this.dampingFactor );\n\t\t\tthis._sphericalDelta.phi *= ( 1 - this.dampingFactor );\n\n\t\t\tthis._panOffset.multiplyScalar( 1 - this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis._sphericalDelta.set( 0, 0, 0 );\n\n\t\t\tthis._panOffset.set( 0, 0, 0 );\n\n\t\t}\n\n\t\t// adjust camera position\n\t\tif ( this.zoomToCursor && this._performCursorZoom ) {\n\n\t\t\tlet newRadius = null;\n\t\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t// this method avoids floating point error\n\t\t\t\tconst prevRadius = _v.length();\n\t\t\t\tnewRadius = this._clampDistance( prevRadius * this._scale );\n\n\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\tthis.object.position.addScaledVector( this._dollyDirection, radiusDelta );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tzoomChanged = !! radiusDelta;\n\n\t\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\tconst mouseBefore = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseBefore.unproject( this.object );\n\n\t\t\t\tconst prevZoom = this.object.zoom;\n\t\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\t\t\t\tthis.object.updateProjectionMatrix();\n\n\t\t\t\tzoomChanged = prevZoom !== this.object.zoom;\n\n\t\t\t\tconst mouseAfter = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseAfter.unproject( this.object );\n\n\t\t\t\tthis.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tnewRadius = _v.length();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\tthis.zoomToCursor = false;\n\n\t\t\t}\n\n\t\t\t// handle the placement of the target\n\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\tthis.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t.transformDirection( this.object.matrix )\n\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t.add( this.object.position );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t_ray.origin.copy( this.object.position );\n\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( this.object.matrix );\n\n\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t// extremely large values\n\t\t\t\t\tif ( Math.abs( this.object.up.dot( _ray.direction ) ) < _TILT_LIMIT ) {\n\n\t\t\t\t\t\tthis.object.lookAt( this.target );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( this.object.up, this.target );\n\t\t\t\t\t\t_ray.intersectPlane( _plane, this.target );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\tconst prevZoom = this.object.zoom;\n\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\n\t\t\tif ( prevZoom !== this.object.zoom ) {\n\n\t\t\t\tthis.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._scale = 1;\n\t\tthis._performCursorZoom = false;\n\n\t\t// update condition is:\n\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\tif ( zoomChanged ||\n\t\t\tthis._lastPosition.distanceToSquared( this.object.position ) > _EPS ||\n\t\t\t8 * ( 1 - this._lastQuaternion.dot( this.object.quaternion ) ) > _EPS ||\n\t\t\tthis._lastTargetPosition.distanceToSquared( this.target ) > _EPS ) {\n\n\t\t\tthis.dispatchEvent( _changeEvent );\n\n\t\t\tthis._lastPosition.copy( this.object.position );\n\t\t\tthis._lastQuaternion.copy( this.object.quaternion );\n\t\t\tthis._lastTargetPosition.copy( this.target );\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_getAutoRotationAngle( deltaTime ) {\n\n\t\tif ( deltaTime !== null ) {\n\n\t\t\treturn ( _twoPI / 60 * this.autoRotateSpeed ) * deltaTime;\n\n\t\t} else {\n\n\t\t\treturn _twoPI / 60 / 60 * this.autoRotateSpeed;\n\n\t\t}\n\n\t}\n\n\t_getZoomScale( delta ) {\n\n\t\tconst normalizedDelta = Math.abs( delta * 0.01 );\n\t\treturn Math.pow( 0.95, this.zoomSpeed * normalizedDelta );\n\n\t}\n\n\t_rotateLeft( angle ) {\n\n\t\tthis._sphericalDelta.theta -= angle;\n\n\t}\n\n\t_rotateUp( angle ) {\n\n\t\tthis._sphericalDelta.phi -= angle;\n\n\t}\n\n\t_panLeft( distance, objectMatrix ) {\n\n\t\t_v.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t_v.multiplyScalar( - distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t_panUp( distance, objectMatrix ) {\n\n\t\tif ( this.screenSpacePanning === true ) {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t} else {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t_v.crossVectors( this.object.up, _v );\n\n\t\t}\n\n\t\t_v.multiplyScalar( distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\t_pan( deltaX, deltaY ) {\n\n\t\tconst element = this.domElement;\n\n\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t// perspective\n\t\t\tconst position = this.object.position;\n\t\t\t_v.copy( position ).sub( this.target );\n\t\t\tlet targetDistance = _v.length();\n\n\t\t\t// half of the fov is center to top of screen\n\t\t\ttargetDistance *= Math.tan( ( this.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\tthis._panLeft( 2 * deltaX * targetDistance / element.clientHeight, this.object.matrix );\n\t\t\tthis._panUp( 2 * deltaY * targetDistance / element.clientHeight, this.object.matrix );\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t// orthographic\n\t\t\tthis._panLeft( deltaX * ( this.object.right - this.object.left ) / this.object.zoom / element.clientWidth, this.object.matrix );\n\t\t\tthis._panUp( deltaY * ( this.object.top - this.object.bottom ) / this.object.zoom / element.clientHeight, this.object.matrix );\n\n\t\t} else {\n\n\t\t\t// camera neither orthographic nor perspective\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\tthis.enablePan = false;\n\n\t\t}\n\n\t}\n\n\t_dollyOut( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale /= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_dollyIn( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale *= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_updateZoomParameters( x, y ) {\n\n\t\tif ( ! this.zoomToCursor ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._performCursorZoom = true;\n\n\t\tconst rect = this.domElement.getBoundingClientRect();\n\t\tconst dx = x - rect.left;\n\t\tconst dy = y - rect.top;\n\t\tconst w = rect.width;\n\t\tconst h = rect.height;\n\n\t\tthis._mouse.x = ( dx / w ) * 2 - 1;\n\t\tthis._mouse.y = - ( dy / h ) * 2 + 1;\n\n\t\tthis._dollyDirection.set( this._mouse.x, this._mouse.y, 1 ).unproject( this.object ).sub( this.object.position ).normalize();\n\n\t}\n\n\t_clampDistance( dist ) {\n\n\t\treturn Math.max( this.minDistance, Math.min( this.maxDistance, dist ) );\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\t_handleMouseDownRotate( event ) {\n\n\t\tthis._rotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownDolly( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientX );\n\t\tthis._dollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownPan( event ) {\n\n\t\tthis._panStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseMoveRotate( event ) {\n\n\t\tthis._rotateEnd.set( event.clientX, event.clientY );\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMoveDolly( event ) {\n\n\t\tthis._dollyEnd.set( event.clientX, event.clientY );\n\n\t\tthis._dollyDelta.subVectors( this._dollyEnd, this._dollyStart );\n\n\t\tif ( this._dollyDelta.y > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t} else if ( this._dollyDelta.y < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t}\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMovePan( event ) {\n\n\t\tthis._panEnd.set( event.clientX, event.clientY );\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseWheel( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientY );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( event.deltaY ) );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( event.deltaY ) );\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\t_handleKeyDown( event ) {\n\n\t\tlet needsUpdate = false;\n\n\t\tswitch ( event.code ) {\n\n\t\t\tcase this.keys.UP:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateUp( _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( 0, this.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.BOTTOM:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateUp( - _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( 0, - this.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.LEFT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateLeft( _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( this.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.RIGHT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateLeft( - _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( - this.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.update();\n\n\t\t}\n\n\n\t}\n\n\t_handleTouchStartRotate( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._rotateStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartPan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyStart.set( 0, distance );\n\n\t}\n\n\t_handleTouchStartDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchStartPan( event );\n\n\t}\n\n\t_handleTouchStartDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchStartRotate( event );\n\n\t}\n\n\t_handleTouchMoveRotate( event ) {\n\n\t\tif ( this._pointers.length == 1 ) {\n\n\t\t\tthis._rotateEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t}\n\n\t_handleTouchMovePan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t}\n\n\t_handleTouchMoveDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyEnd.set( 0, distance );\n\n\t\tthis._dollyDelta.set( 0, Math.pow( this._dollyEnd.y / this._dollyStart.y, this.zoomSpeed ) );\n\n\t\tthis._dollyOut( this._dollyDelta.y );\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tconst centerX = ( event.pageX + position.x ) * 0.5;\n\t\tconst centerY = ( event.pageY + position.y ) * 0.5;\n\n\t\tthis._updateZoomParameters( centerX, centerY );\n\n\t}\n\n\t_handleTouchMoveDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchMovePan( event );\n\n\t}\n\n\t_handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchMoveRotate( event );\n\n\t}\n\n\t// pointers\n\n\t_addPointer( event ) {\n\n\t\tthis._pointers.push( event.pointerId );\n\n\t}\n\n\t_removePointer( event ) {\n\n\t\tdelete this._pointerPositions[ event.pointerId ];\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) {\n\n\t\t\t\tthis._pointers.splice( i, 1 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_isTrackingPointer( event ) {\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_trackPointer( event ) {\n\n\t\tlet position = this._pointerPositions[ event.pointerId ];\n\n\t\tif ( position === undefined ) {\n\n\t\t\tposition = new Vector2();\n\t\t\tthis._pointerPositions[ event.pointerId ] = position;\n\n\t\t}\n\n\t\tposition.set( event.pageX, event.pageY );\n\n\t}\n\n\t_getSecondPointerPosition( event ) {\n\n\t\tconst pointerId = ( event.pointerId === this._pointers[ 0 ] ) ? this._pointers[ 1 ] : this._pointers[ 0 ];\n\n\t\treturn this._pointerPositions[ pointerId ];\n\n\t}\n\n\t//\n\n\t_customWheelEvent( event ) {\n\n\t\tconst mode = event.deltaMode;\n\n\t\t// minimal wheel event altered to meet delta-zoom demand\n\t\tconst newEvent = {\n\t\t\tclientX: event.clientX,\n\t\t\tclientY: event.clientY,\n\t\t\tdeltaY: event.deltaY,\n\t\t};\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 1: // LINE_MODE\n\t\t\t\tnewEvent.deltaY *= 16;\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // PAGE_MODE\n\t\t\t\tnewEvent.deltaY *= 100;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// detect if event was triggered by pinching\n\t\tif ( event.ctrlKey && ! this._controlActive ) {\n\n\t\t\tnewEvent.deltaY *= 10;\n\n\t\t}\n\n\t\treturn newEvent;\n\n\t}\n\n}\n\nfunction onPointerDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( this._pointers.length === 0 ) {\n\n\t\tthis.domElement.setPointerCapture( event.pointerId );\n\n\t\tthis.domElement.addEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.addEventListener( 'pointerup', this._onPointerUp );\n\n\t}\n\n\t//\n\n\tif ( this._isTrackingPointer( event ) ) return;\n\n\t//\n\n\tthis._addPointer( event );\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchStart( event );\n\n\t} else {\n\n\t\tthis._onMouseDown( event );\n\n\t}\n\n}\n\nfunction onPointerMove( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchMove( event );\n\n\t} else {\n\n\t\tthis._onMouseMove( event );\n\n\t}\n\n}\n\nfunction onPointerUp( event ) {\n\n\tthis._removePointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 0:\n\n\t\t\tthis.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\n\t\t\tthis.dispatchEvent( _endEvent );\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tconst pointerId = this._pointers[ 0 ];\n\t\t\tconst position = this._pointerPositions[ pointerId ];\n\n\t\t\t// minimal placeholder event - allows state correction on pointer-up\n\t\t\tthis._onTouchStart( { pointerId: pointerId, pageX: position.x, pageY: position.y } );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseDown( event ) {\n\n\tlet mouseAction;\n\n\tswitch ( event.button ) {\n\n\t\tcase 0:\n\n\t\t\tmouseAction = this.mouseButtons.LEFT;\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tmouseAction = this.mouseButtons.MIDDLE;\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tmouseAction = this.mouseButtons.RIGHT;\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tmouseAction = - 1;\n\n\t}\n\n\tswitch ( mouseAction ) {\n\n\t\tcase MOUSE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseDownDolly( event );\n\n\t\t\tthis.state = _STATE.DOLLY;\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.ROTATE:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.PAN:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onMouseMove( event ) {\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleMouseMoveRotate( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseMoveDolly( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleMouseMovePan( event );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseWheel( event ) {\n\n\tif ( this.enabled === false || this.enableZoom === false || this.state !== _STATE.NONE ) return;\n\n\tevent.preventDefault();\n\n\tthis.dispatchEvent( _startEvent );\n\n\tthis._handleMouseWheel( this._customWheelEvent( event ) );\n\n\tthis.dispatchEvent( _endEvent );\n\n}\n\nfunction onKeyDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tthis._handleKeyDown( event );\n\n}\n\nfunction onTouchStart( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 1:\n\n\t\t\tswitch ( this.touches.ONE ) {\n\n\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tswitch ( this.touches.TWO ) {\n\n\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onTouchMove( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.TOUCH_ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMovePan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_PAN:\n\n\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyPan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n}\n\nfunction onContextMenu( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tevent.preventDefault();\n\n}\n\nfunction interceptControlDown( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = true;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.addEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nfunction interceptControlUp( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = false;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.removeEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nexport { OrbitControls };\n","import * as THREE from \"three\"\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\"\n\nimport starsTexture from \"../img/stars.jpg\"\nimport sunTexture from \"../img/sun.jpg\"\nimport mercuryTexture from \"../img/mercury.jpg\"\nimport venusTexture from \"../img/venus.jpg\"\nimport earthTexture from \"../img/earth.jpg\"\nimport marsTexture from \"../img/mars.jpg\"\nimport jupiterTexture from \"../img/jupiter.jpg\"\nimport saturnTexture from \"../img/saturn.jpg\"\nimport saturnRingTexture from \"../img/saturnRing.png\"\nimport uranusTexture from \"../img/uranus.jpg\"\nimport uranusRingTexture from \"../img/uranusRing.png\"\nimport neptuneTexture from \"../img/neptune.jpg\"\nimport plutoTexture from \"../img/pluto.jpg\"\n\nconst renderer = new THREE.WebGLRenderer({ antialias: true })\nrenderer.setSize(window.innerWidth, window.innerHeight)\ndocument.body.appendChild(renderer.domElement)\n\nconst scene = new THREE.Scene()\n\nconst camera = new THREE.PerspectiveCamera(\n\t65,\n\twindow.innerWidth / window.innerHeight,\n\t0.1,\n\t1000\n)\nconst orbit = new OrbitControls(camera, renderer.domElement)\ncamera.position.set(-90, 140, 140)\norbit.update()\norbit.enableDamping = true\n\nconst ambientLight = new THREE.AmbientLight(0x333333, 5)\nscene.add(ambientLight)\n\nconst pointLight = new THREE.PointLight(0xffffff, 10000, 500)\nscene.add(pointLight)\n\nconst CubeTextureLoader = new THREE.CubeTextureLoader()\nscene.background = CubeTextureLoader.load([\n\tstarsTexture,\n\tstarsTexture,\n\tstarsTexture,\n\tstarsTexture,\n\tstarsTexture,\n\tstarsTexture,\n])\n\nconst textureLoader = new THREE.TextureLoader()\n\nconst sunGeometry = new THREE.SphereGeometry(16, 30, 30)\nconst sunMaterial = new THREE.MeshBasicMaterial({\n\tmap: textureLoader.load(sunTexture),\n})\nconst sun = new THREE.Mesh(sunGeometry, sunMaterial)\nscene.add(sun)\n\n// const mercuryGeometry = new THREE.SphereGeometry(3.2,30,03)\n// const mercuryMaterial = new THREE.MeshBasicMaterial({\n// \tmap: textureLoader.load(mercuryTexture),\n// })\n\n// const mercury = new THREE.Mesh(mercuryGeometry, mercuryMaterial)\n// const mercuryOrbit = new THREE.Object3D()\n// sun.add(mercuryOrbit)\n// mercuryOrbit.add(mercury)\n// mercury.position.x = 28\n\nfunction createPlanet(radius, texture, position, ring) {\n\tconst planet = new THREE.SphereGeometry(radius, 30, 30)\n\tconst planetMaterial = new THREE.MeshStandardMaterial({\n\t\tmap: textureLoader.load(texture),\n\t})\n\tconst mesh = new THREE.Mesh(planet, planetMaterial)\n\n\tconst obj = new THREE.Object3D()\n\tobj.add(mesh)\n\n\tif (ring) {\n\t\tconst ringGeo = new THREE.RingGeometry(\n\t\t\tring.innerRadius,\n\t\t\tring.outerRadius,\n\t\t\t32\n\t\t)\n\t\tconst ringMat = new THREE.MeshBasicMaterial({\n\t\t\tmap: textureLoader.load(ring.texture),\n\t\t\tside: THREE.DoubleSide,\n\t\t})\n\t\tconst ringMesh = new THREE.Mesh(ringGeo, ringMat)\n\t\tobj.add(ringMesh)\n\t\tringMesh.position.x = position\n\t\tringMesh.rotation.x = -0.5 * Math.PI\n\t}\n\n\tscene.add(obj)\n\tmesh.position.x = position\n\n\treturn { mesh, obj }\n}\n\nconst mercury = createPlanet(3.2, mercuryTexture, 28)\nconst venus = createPlanet(5.8, venusTexture, 44)\nconst earth = createPlanet(6, earthTexture, 62)\nconst mars = createPlanet(4, marsTexture, 78)\nconst jupiter = createPlanet(12, jupiterTexture, 100)\nconst saturn = createPlanet(10, saturnTexture, 138, {\n\tinnerRadius: 10,\n\touterRadius: 20,\n\ttexture: saturnRingTexture,\n})\nconst uranus = createPlanet(7, uranusTexture, 176, {\n\tinnerRadius: 7,\n\touterRadius: 12,\n\ttexture: uranusRingTexture,\n})\nconst neptune = createPlanet(7, neptuneTexture, 200)\nconst pluto = createPlanet(2.8, plutoTexture, 216)\n\nfunction animate() {\n\tsun.rotateY(0.004)\n\tmercury.mesh.rotateY(0.004)\n\tvenus.mesh.rotateY(0.002)\n\tearth.mesh.rotateY(0.02)\n\tmars.mesh.rotateY(0.018)\n\tjupiter.mesh.rotateY(0.04)\n\tsaturn.mesh.rotateY(0.038)\n\turanus.mesh.rotateY(0.03)\n\tneptune.mesh.rotateY(0.032)\n\tpluto.mesh.rotateY(0.008)\n\n\t//Around-sun-rotation\n\tmercury.obj.rotateY(0.04)\n\tvenus.obj.rotateY(0.015)\n\tearth.obj.rotateY(0.01)\n\tmars.obj.rotateY(0.008)\n\tjupiter.obj.rotateY(0.002)\n\tsaturn.obj.rotateY(0.0009)\n\turanus.obj.rotateY(0.0004)\n\tneptune.obj.rotateY(0.0001)\n\tpluto.obj.rotateY(0.00007)\n\trenderer.render(scene, camera)\n}\n\nrenderer.setAnimationLoop(animate)\n\nwindow.addEventListener(\"resize\", () => {\n\trenderer.setSize(window.innerWidth, window.innerHeight)\n\tcamera.aspect = window.innerWidth / window.innerHeight\n\tcamera.updateProjectionMatrix()\n})\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}